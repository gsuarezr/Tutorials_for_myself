(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    141820,       2864]
NotebookOptionsPosition[    133725,       2727]
NotebookOutlinePosition[    134139,       2743]
CellTagsIndexPosition[    134096,       2740]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "First of  all this is based on the book Using Mathematica for quantum \
mechanics by ",
 ButtonBox["Roman Schmied",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.springer.com/gp/book/9789811375873"], None},
  ButtonNote->"https://www.springer.com/gp/book/9789811375873"],
 ", this is simply exercise 2.1 "
}], "Text",
 CellChangeTimes->{{3.7992821675575886`*^9, 3.799282309334654*^9}, {
  3.799289518496093*^9, 3.799289522967169*^9}, {3.7996165734503384`*^9, 
  3.799616576962103*^9}, {3.799616630600485*^9, 
  3.7996166383162875`*^9}},ExpressionUUID->"f4983b08-6475-4f92-8753-\
868de4450b04"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nWReHMNO/CMyXjfiK9TYwVjjSqz4EnU/VS+GVPL1/wwnvpqQ6+DNef+BS9r8
+MIsbp07FIozk23kxHHkwuz3+Osl5drWTJeoOTGUeTip+9RD9f/RWxc3Yrc9
hLfnasT7EwI/4VxDgfFYA5Ent53YFR33tyH9uNQ2n8CHK64miY7niMGcDz2X
ftWcfwmBW39FQ66eRldje8W/W6px7EgNjq64PiPtXfql3vNNtj9Tl0TElyjr
pvq2dAAjjvfwVcz6N8auRx0vw+9H9XcyMtYYbnN612B0LNBDjTPT5FLRPVS6
ry1Rsdg6JMwrsIRZ71e4NPFY46elk3dB+XtEjq106ZJk3lUq37tOukRuN76z
aLV/ivPObtjt3Tjb9+8Y/qLxSJcuSYMNImGotphakzobpQfrUXlAzUOi7qVk
oahiF4qjay+EtZOeHlf+biSWylAf1nt3y/Ze5O+T1CVJ2SarHTPIc0nYj1dn
nI7O6RjFsq+X2FfbroTqFYT+guD9mzjf+ibO+uPlxNHoghV5a5fHHO04NNXX
pMRE7kJbRC7zRdwfOY/Wo5/DLy+OSP3tOPZH6x1l3FPttOXcZFkobrmoyR0p
3cP3cBx9f/m61kqXyDkH85B76KISZ53MfeqhjitR/T94C65qg3Hv0jmOHl2x
LhKy14zqEuUdR9dQ25C6RJkj4vpwBeA/e1x3n0RaT/zsvX8mnAeP7o9eV1ee
oa6P9nJN+dh+MMbaO2LtEQpLCC4JSfbnZ0GXaPY5wjkOxHsNht59MrpEFI7o
a9wWWgss7YisbRK8h5HzJ3D0bKLa5fHbeCjvUQEO9d2J9AGKaDNSbuhzqI6O
pTbc5uLYKYbGAh2UucZc/DrOfN6F1q7LmvalQXxWPserqLFfif33FWjij80v
oCXsryp/Ke77zuDoyW+VPMFzuO2qj53fLpy/S/N8JZJtZzH2b4RgEEvJvKtU
vndddMkCJj127OscNlSjSR/9MSg5XZIOGwT67yzioDg1qcN6N9Z6lvi52y7U
yGtKMeqIynk/szVzfxwM9WG9MW0x/Pwi82/Mi/NzbYy4d713lIxtssoxgzyn
KGvqEXkmVv49Q9dvVM37HtpzySmqQpOtAx3W/Si2lGrqgcRhfhROua6o+PnS
Zjj6BuWckVfPd+JY9Y7QWkhxC84P/hv+6QUl//wLSuyXVJPwCGz2E7DW7oCl
+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
vaiuSaZlTy4NukTOK5sZu89LNUK//xGTim/G3FA78kwZOr6eyhqtqGNUn3bj
bVYHtrPUjg19II3tjGwq1HE+KVtBwPzIByjLrYfrdrJKVvJR7kFLvRXvHt8D
i9wPzLBUfxon59ZyLAtrkRKSHtZHl8xhtPtNuCYUzwhpbyKZ/PhJs5HnMq1P
x2r2ZJT14bD9JPnL/4iL9r0oqDyBXv9aaRJIxRjQuXW7aPvfTf6zwgyG7eWK
D/sWVLadh3dyLsa1bnxdkvreWugnGTaevaja6wb3Jdd4PzLkT25kzVLVHXrH
qrpF/E7VF9Rwm9XhKbazZNn07Yw8M4T6dJK6ZPFnuPZVwz48k+T8t4DJ/uMo
KenA4P2l0L8HP0DttkxFm5yFXyfPpHqdrOlMSHpYH10i6YQTODEUGitCNcbW
dt1w4+aYXMC0/wd4vd4Ufm5iQl23eXwD3TuyQnaS7TQ+sh1Go82B3qFbeJBs
ndv1JvgHvGdfQ2mOkpvWXIJG53BUfd6Nr0vWk41oL4b8LAzWC5L2LHTb9QCc
DeJ7K7Wjz0jbX3khSfhSqG1Eb79EYw9p25ehNqt372xnKR2rkkw7I88MSesS
af3gZCNa9WLU9T+IOV8XSsy5UXVltTEn2ShX/D1WfZ2EkLismS4RfsfAe+/g
/eO12OccxXzwV3hOtsLuvo7hM9Uw5djhjTt4SDlpz+FEzy+acWIBk563UCbb
BltR7biBQEyzILQm+iyvX4THwtyj6B2fTXIc3gg8wfykF277PmyTa2BlRdXU
pS7RsvHsRcV/IemY1Fis1o9reY8jcb0Cdb9E/9hw31qROyNRm9WB7Sy1Y2XS
2c7IZiIU12XQ3pf8lz95E+1JaxIJdUyItY4pxZGdlPOs6NkT1CWEpJe10SXS
XPIRXu/9FY8GWpG1tRM+ealTiqU9h+aiTJjy6/GBN06uDCne8bWP4AvvnUpr
Gt2oOfQprol2+OLUNdjL62PPVbKveS52u8aM7+Vuqrj3ZZt9042Fcz70XPpV
816WELj1VzTIscZa22MddInsj2bedPbihohHTqv2X318SdiGWVGXWT1gBt6/
XsGEoPHTiunnqf49Czu6b4T2Uwy3WR3YzlI7VubZX2MiOswNwpZnjrE+EEVc
TSIgeO8P3Iu7r6nOGzr+Fcp8E1+XGM9JTAiJT0xdcv8KrNtykF9xDI7LtxCI
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
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEGuOdwajzlaYiv4F2+i8+MdFvBztg73x
DI5lp0GXsA1peedgHXwK77rerBocvFMPcKvdikbzp+ifXFzvGyI2MNxkP66Y
LbC234Z7amG9b4cgCILYaAi2kRUVxz/H6Nu1+MEleMbuwmo8huy0bUjQpSHn
RC2sXYMYHfse1uMXMTjHQbB3pkdwp7MNzbUVvI1WBKvfdtvMbKZ2LWB65Ft0
2ppQW/Eesg9/Fv8x4p3G6L1utFsvwlh6CHuNdzAb559UxoPR66VIT3kHdf1/
gVvVa/NjYPJbWEoPIE2XgIRtZ+CcXYL3xUM4+DFhbL4B5+AQhvq/RnNpFq9N
+M/o3kHz8OtVvYuVs4RZ12XkJicixXAVQ2F2pgcucyYSChyY1HhF7mkHTjb8
gLnVvtWV8uYnNO5OxSH72CqPBW195HWZkZxQBMekN+Lf1hVNfcR07H20GHYh
IeUYrMOvYuhPDvOj11Gcvgs5dd9ianUfRPzxTmHkztewNdeh4thBHLb+jDVZ
crc8vE0x/gN6HDY0m40ozc+D0Tm93jdFEESsSHokOxUJzO7Za10DXcLPH8Of
wZCShgLLXYx52HrqhWfCjVvXypHJbLTEUnQ9C6yz3OwAajMS+XvM28D2ezR4
m9MbvIiuSbuWvPDGunaHfYe3PQc/QsaajRHGPMbtRUjkf3NbhXN9dAk3Bvuh
ZP756LDDNLDKdjJvm3lewTPTi4ptfL/ubsTQk9uoyj0ebqctjsCau52/jx0o
7vpzlW3iFcL9ia7iHfy9ZaPR7VH4QIy6hJvBYO1efg4ogn18o73rHrgbs6E7
ZMf4qj6ELaRLNPcRhzduC3bz73diaQ9mNF//DT8vHPXp9B114v7VRobjp9Ol
4HdWGuMJ27CXdMnq4n0Eu4HZM2moIF1CEJuMeUyOjGDCs+hfH9bE5pRsrIwG
uMLWlAVM9tZArwux09/+DOvebZtYl/B2/dAnaLgTMk/Gu138+jd0sQl3ZmN4
qCrfeTtqxd411SVvMes8g23rqUtE/6Tbt37AuGcpLr8g9asu8xCO6A+idmBa
QXdMw1mRhgTdYX6cbLBTBK8L5mR+XKjaxrHoEvaeXEQW25vgtWBKsQPjMYvq
eMLx01cLslb9fd1KuiSGPpp0oIDNKclmuGK5fe8zuG//F/fHPRtLoyvAzd7H
xYZvQ+aveYxa80iXxAVxriRdQhCbmrW0OblxOw7pIvwWN4GukjyYBl/KbnBz
6xK2Npmz9oTPk3Ftl2jjJTH/IK0PVf07/0xdEm8CbUxISIK+9h5eKBlacz+i
MWs3DLYRbLjRv2q6hPm1daMyPRG6LDO+/qIUKQkpyG9xw7ORjE/hnU1eZXty
K+kSaO+j5eqSzQLb4zHnIils/iJdEj9IlxDEVmBddIkuW2VvmMPc4CWclPur
bGJdwnkewMr8qJXmybi1S/KV04lxC1oeauTvkC6JB5J9wvdrSjm6wuLF2XnN
/2Cv+hdqb/66sexziVXRJUyT3EaVPikQb+D9A71V+6FL2AWD9cEGavsCHtuO
8NqpBSOLq3VTW0yXaO2jraxLuFcYth7jtbXS/EW6JH6QLiGIrcCa2px+X3lm
i70Ls/MJ5qMt70H2+ytMuTtgFuKFdUjWH4el70+FPEW8rfNyFM7WOpSVGVFf
b0SpoRgV5jY4R2fEz7P4+26YssX7ST0O68DvvA3EYr270ViwS7xPA8yd32F0
2hfTy3keo6+5GKkJ6ShuG1a3mRYfo8fyAYoyk4T98MyiapjNZpiv9GOSW2a7
xPxNtUYTmmx22BrPoLi0DrZ742I/clgcuwVLTZEvVkenR1FNPf+7DbjS/1TF
7yH6d4LGyMIzuB0XUJrDckWlQF/8MfomFfLqeJ9jpOcqjEUGHMnejfTsYzC2
9GDkhZZ8TXJd0ouZFw/RZTmNgswU3o7Ro8D4Ge5NvA5pD8tjdQettVWobrLh
hu0SKovLYbLdw8R88MDmPI9wx3oeVY2tuGG/KvTnx5c+gNnva/cW89O/wdXb
jqaq4zhouhtsW3CzGLvzKUxVjbDduI5r7Dc/bsBpc6jPRgT8sRmJyDDL4ry9
s5hw30ar6STKzQ64Juc2rr/KinUJ/w4+7oKRaZKE7ci3Pwm0dWEQpu3s2rw2
abmPqQ3i0+XbW1GLp1kOW02XaOyjZegSbn4Kv7r+C3vTBzhx8HyIv6mYT8VU
g0bbl7Bf+wjG6ku4dNqi0ZdVy5ohfs4zAbeTzQ0nkH+0jZ8T/4arrQp56XuQ
b/4afZ3NqCnSC3Ewuswi1LB535+rLliXLEz9BIe5FDksB0zyXhRbvsWk0liX
cveV/QvG+vMwlr6HogozbM5RvJR/Xpg/nHwfVaNo34dwzs5jytWO2qK9/FiJ
NF/Hev0PUJpfChtbu1yfw5i3B+n5DXBOeuCZeIh7XVaYThyFiZ9Tuflx3LNW
ifO3rI3CPMryEbJ7Y3kHq9E+EpoHQXou9fzzvMzPt61orHwfpaY2hTWAdAlB
bAXWdi9cti8v+q9kln4SMu+H3qBkv+/HuUs1KK/9HL2DP2CwuxEF7DpheYqk
/ddMlHU8CugeaQ9Wl4XyzkdYFO9nxnmO1xgs9tgC95vALMc9daAwMfzvwi3x
fbYvl++vqHumEebJWNvFTWOgNhu6oPMMMQ409Pxp1umLp9Z8XhL5O/4xoq/E
JdNp1F6/jUHXALobC4U9Qd3eFgzL+87zALaS92EZmhaf6yJmBhqE2AFd1kUM
zUaL15DpkiPlOHnoGGquXYeD1xA1Bbt9ca8ppXD4Y6OX8GKgHnpdcD/77KMQ
HynBVzALBvujwJjzjsFRnO3/LsfbHQ/49nWacoTfCt7zXMRkVzl2GNpl8Q/z
GHeUYmcsZztC7qLEQNyI9ykGreeQx+wTIf9WOvIqLOhw/Rldu68XK9ElLE6g
vRo5LJfXwXewPzEZBY6JkGsnIu2dg7xe3ob0oiY4x2bXX6MJ+RBSsbvxJ/7t
Ww22ni7R1Eex6hLOg4kHLvzQafLFIIXMU9xkJ0p2FMvyJfDrwLgDxTvPapgD
Y1gzhPsYQp+1RJj7ErI+hPWTC2i69iHy2bwtxOMvRTjvDegS/TkzTOUf4Xrv
AFyDN8W9sCTsbX4Q3G/CfWRjR1kHxv17LFI8Jr+Glv8bY8Ja5MXLMTd+cBh9
eUq2HUX95RpUWf8jzNc9Ym6Z0Pla+/WXBM3h6ruGImENz8VH1mbUNTXDlL+T
/+9M1Nx0wTX0XzQXsPjznShq+hSNtVfR1f89//e7uF65j59TtyO36Rv8p6Ea
5ht3MeQaCqx7qefgnAmsD9yLe6jVJwX3o5iTRKevx8AL+VpCuoQgtgJr76PD
9kh7YBbmsQTRBtsNw6VujL5U2Ev32+8ZKOsal+mXOX5+P8zPcYnB69/8AzTn
bIdOQTdwM72oTGU2/wE0usVZTjrDCY0r5p7BWbmb/93dqHQ+k9lD7HeP4ahj
XIONpEWXaGyXEGeQFDJvS/Z7SM6oeOmS1FPoeirba/Off8n3RmfhbjyInaE5
rPz5rfg1yTqCyKcmAV0SpmO84+gqy/DFRpd1i7lC2W8e4Pss5FlJbZLl7vFp
ldDcVhzmXFdQF/SMVHzJxHYkFnfhmXwAzP2AC3V3NesSyadRGqfe6V/hcvFr
uut79HfbUG8Q9VdMvkwTcBQkB96rZfxLNru010mRdEniSfTMKGlNFZv7xV0Y
05N9dVnuPIJHuI6SLmF/498NYU+5BPrkHTho+wXxyUKglUU8dZQgcdXyQW1B
XaKlj2Z6UJq4DD8uxXlK3J8JyeUIvILrgiX6HBjrmgHZnJhsgHWEzX3sHf4N
D8Ze8O9PJD9USZfokFrWhaf+vQ0Oi/w1c3Whe2EeDDfn89pIIe+Ff41KQlbj
j+Hzvy4PFvfLwDznn4Pl8/Uyru9fu3Yg3/rQF/fG8rs/eCKerUhtTERG7QBm
ZV0a8OUO/b2XGDRlCtomEF/Kz8tuC69D+b6q7MWM/zrSupoZHItKuoQgtgRr
r0tEvM8x3GmGIX2b3ybSZZ6CPfQcVzUOQ2nuZ/EpddgRatP78eWxFNYE/zwn
5Z4M8afxz8khcyJvf5r3VQXt6aijRZdoaZevbV7Pc0x7ZB4F808x1FIYnk83
XrokbIyEt8+3jiciJe8U6gX/BelftejTlqAhj2ikdV22fuuOwj4uPmWvB9PT
noBNzc1hcugqChKD28Q960Ix/zedvhqd8nM67wwmn8v9G9R0ieh/pdsPY+fP
Mh+HBTyfjHDup9g+tXGKIB917bVLXmOsvxMOh2OZ/zrwjXtK45mE9Bx4fVjS
6fNNDENj3HtEXTKh/r2ga/yJ/itmNLZ+BnOlBf1T8bPVfWMo1CZaLmuoSzZS
HwnnlsvIM6c4T3nxrKuUnweToDd+Ldvf4ufM53/jeUQfwOWsGdHWTS26RCG+
RKltcwMw7dApntvL8y0H7VepzuUK69Fyrh81NjLGNkb8jhee6efw+J/hW8xP
3kdLgVI+YNIlBLEVWDddIsB8R39Gt/ldn/0l+OeUwP5Ytk7FZL9La4haTKG0
BgXvSUm2amDu9dlcB/IrcC4vGQmJJXA8ZWsd8/uqwj6z1rpvq6lLAv9/ftKF
jpYm2G79iIc3ysM/u266RFrHVrouROkDf9+F2z3c/J9wdXwCi+023A+/Qmlo
m8Q8Ob6ziJ3Ir72hEsOhdg8h+Wzz6+CI2ddKGqdRfPD951HJcajntwL4Phx2
1MOQvgM5VbwdqJpHea10CTtjNIn27SIm7MfiG1MsaNOdq1TXZq10ycbrI87z
MzqrDmBb+lHUOx7ipZYBrjJP+fIeJolryGHUOlyYnNfSuuWtGWujS7joefwl
XSGfSzTrkmVef011iQjbZ3L9Gy2WNtxyu3CjVCmfDOkSgtgKrK8uEeFeY7zn
Q+glW8/vn4MY7XdpXlLfh/a3N8hWlc5G0lHWM8nP1uxM+TAqnX+K+3CiXciN
w3H0WAz7e6usS7xPMdBcikPV3aIfsMpn102XSPez0lwz0bSZUr8uYHLgCooP
1aJnXIyHVGuTl8WpnkF2shjnpMtCmW0oJLY60j0sCLGelVJNUhYnVWaDK6ze
uVrzfoXtwHYNteGktXqD6RIG34c/WN5Fom4/qnr/UDknWiNdsvQQzSe+xITQ
QV5MOoqgK+rCVAzNiQ3xuazKnLlGumTD9ZEUv5CCfMug9rwGqvMUy183hLbK
XL5PpPP3k7C5/o5yhrm8NWNtdIksl7jieQZk64hsLtSsS5Z5/TXVJSz25zs0
Fx9FdY+UJ0dtXSVdQhBbgTXTJdwY2s+2qceK+7VBcDzA8s5LEsL9/6VvSe0N
mocDe2LMx+j3Pztx/OAVITZQ8i9mvscPH1px4HAs9Z5XUZdwf6Gvej8Ss/j7
nuMif3Ydz0ukfkwsdOCpWj955+CJuJepUZfojsD2mGkBL6b6aqFPDPYBj9wP
vnMnh/ko0nU+baGvvhvQwxpyFQtnM46AL6JOX4s+Db4xPh9rLXXkxfG8EWsq
MqT+3dUIt+KRyRrpErY3f8aCQSEO6TXfZ/u015hfDkLOgtRV0oprpEs2Wh8t
DMG8M5Zc5iLR5jZhX90BsxSfxevm6r6/Ijyn5a0Za35eEhY7I/2UtI6s8Lwk
luuvoS7hpu6iWp8aHN9CuoQgtjRrd17C5oxclPeo5auV1XOQa4ZlxZckqOxF
S/9fIefJmwdo3psk1FY5caIAx7smfPcp6SXd/yHvnVzxPCWWNq+GLgnEVASv
cxtNl8h84lRtaQ+GrZdxM6xeR9AvRtYEUj4WKU5V8ncKvXdFf203Om7/IXuG
S/A8+gqlQmyrLF5F9R5ewdXRFxRPwXl+QXtphsZzDTEmOGEfzK5XET/pa9dO
5FhcGzvufaV1FZehS7ipflw2X0KNoQy2UQ+8k040nL4Ix08DaM3frqEdHoy2
XUbHuGwW8P4BZ+07vv12qZZK+C/7bLmgsbIS4qdLNnQfLbd+ieI8xfJW/Ae3
5XMKN4tH7eVCrsXI8WzLWzPWPL5EwWdV/v+DcmwtJ74kluuvmS6RcsBo1R+k
SwhiKxBdl7DzcRfaLU1oj3omHglx3gnN6eT/Gem8JCRfU6znCou/wl7o8z0t
kbSFn9cYbn4HutRK9ITtDUlzYEiMn3zdCslhGB0px4gs/xO3BO8SF2O7ZPmp
gtbYeYzbi8Lj3qW1RrYHxnm9kfMYRfhOLLoE3CR6ytJ95wfZ9cG58lmugxvn
cbotWu3yyLrEl8M5I6Bx/fln5HYQyxPaDkNI3Dv77OljoWc54tjUpEv4Np8+
LcYbye5Y6CMNukTUUDr9WbRet6DackelXsFzuK3/QqH5rvL/V2Qt496xjrrE
A7fFzI/TZ+g37sauRrdvbAu5h88gMyERaUXX4JpWn624p//GGcv/ZONwlr/m
CZS33sO4Zw5TAxeRq3g2yutS8z7V80BW3+heVyecI881zpVKfbSEF30fIj0x
HXnnrLgzNhtFl7z21T8q3ovkZAOvQeY3dB8JrKouYe9qDY6F5kgU59ioeTaW
sWZEXjdl58b+Mxh+PvKyJxCrzT6Hx3aWk1gpvwSv/4ZbsFeXEbzfF4suWc71
10yXSPcbMq96H8FuiCXufbVsGIIg4o+GuDe/ba22n6QVmW3N/H4Hfw/k2GA1
nTqrhVzp+qrbwXaY0jmy70ti7IdC3iqxfrROX4Nev10s1k7JKFLZ45PsXYU8
tiwHV0ZScL4uTUi5vvg539CE3qEBdLdcwU2WYz/GdvnzKybsQoG5A31938Bm
rsWlS+VCrnpdlgmdA934sv8PcP58kLtgaL6FocFv0GLpltXbUGq8+neUfd8Q
yE0VtA7I6ncLdoceBRU1MNefQ5F+V/jzVb6ZwLoeVCcEvlz71UdRYpPlzvXf
O9/PBQ3o7LuLbtsFVF8y41QGqxGSA1Mn/7cv7+GPV/y6mJQNU9+kLHcX08T6
ED+uwHMI9u9ga98e6E13ZT7xvjo4O6L6cUl5LzPwfs1Jf+x8cnYFmh29GGR5
gged6GQ1IUs/gNVfL3ODsl66hPsNbWdvYHyJvUO7UNT1VPofWOBt9Z2q9pIE
s4HOB+3lv33cjrPW4YANzj3hbZ9L4TazoN93huSZlpDNlSkV6NGU70qtj5gt
9T+0Vx3ktcdOHMzL4seiki7htUvBfiTr9qCoyYkxKQfBhu0jkWXqEv95bJDf
kW9tSdKf59+/wP0KPrg7sqP4cQmfjHnNUJ0TpStK83XKe2juvY/BbissN5/w
s0ogh25oPIu/bWHxcFIdleBYLlYnymrYF55HXM32V5yvl3F91bVLQoMuCfMb
U/qOtH4miPWN76Kv2wZzdQMundILvrdZpg4MdH+N/j9YT6rpktWyYQiCiB++
+kiDzi9hluqa6/ahopXVy3uIiaD8Okt4MXSFn5v1KLZpraOgzNvRVrzf2I/H
o4PosppRUWRAQcG7yMs7rFBbluWDH4GztVKMh+c1S8Vn6HWNw7M4jdF7HYF7
F+as7zEuu2+hxqytDqWGoyg1nke9sRKnLf+GO1JsMrNPq2vQFeZj9BrDLdXL
8vHnPA/RLsRislq7l+Ecf43FZbVrAZN9TUKd9cS0AyjltYnQlvmfYS/bh5S0
gzjV8p1o8/PPd+RLX1y2UF/XKauXpYbSd/4fpkecaK3YJ/pq+8aIa2KWb8Mv
uNfZ4KuFJemB+7+L44MTa06UI5/V+NWlIedEHVpZrQqt44fVAu7/UqipfCjv
XZzgn6HZdAYVplaFOpzMrvgWltIDSEvkf6v0AhzuZyzDJEbtp6BPSUfOqWsY
YPbG7Lcwl9eh0fwBjLVXYXeweu3VqLO7/DqD84zDJX832HO44eTb7eF/aRp3
zGdR31iPKuNHuGa/4astXdcePe6dm8StquMwtj/k+2ERL4ZvwlJZgEwh/j4F
mXlFqDB/iptsLGyQ+uYRWUc/LgbH27YGXS6aR6T30hcroDtgw+NIw53j7emT
rbJ9GP57Vz8NtleY7XX232H7x4JeVvPFZ3FO/ReR/387eJ0Qze4P/HbEPuLf
g8dd1eJcUQj7RCAH7sJgLbYn+GzfliHlfeCN10ciy6mr6HLihtkg5m5k+zNf
wsneFY7XJXcuobz+IsxVVagVa7DWGs2wx7A/rmnNYPPSPQeaSrP89YXYPlG/
eyJ4buNeYaT9LLKTE5GsPw6L8wnmF6cw4vwMFeKejU5fidbe//Hr7RymR79D
Z1DbOnB/3COrPfIaE/faYCo9CkMpq0dfhYrTFnQI85wEP4ePfx92nXuj01j0
/I77Nz5AtpRbJmi+juH6Y9/B0VQm1Gf0X6f/gd9mYDVp3X2fo9LfxjO43vdA
oY3bkV3V7us3Nt/2yvtF+s6SkNu6z1KGnLRkpOWUwuz4iZ+n32J+tB1l+p38
306hZWACLyb+h97rJl9ty7D7Wj0bhiAIgiCIDcq66hLx/FW+JyzEWu9EYbSa
p+zaRbJ7mhvEhQuDsrNQFq/wMU6GXce3H7utrEdW400Bti99/Exku9yPlj6S
clexc9fPMMzbWv4zSdUYD8YG7qPl+nERBEEQBEEQRCjrqkvmMNKci4RcG8YE
+1f0pcu5guFozm+CbvgX7MyfUvBrasLZnr+l/ynY/NUl1vDrCD4oGmJqF39G
20f/Uak1GYrGPmLapOcc0pnvysUv8QWrSZh4BC0P1TQJYwP3EekSgiAIgiAI
YtX4Gz2lOyP4mcdTl4j+6NK15x+g+dAJIe9U8Md+xvXibOTWfSuLHeIwP9qG
wqz3UH/9JuzG99E84hF8YLpaKpCTY5LFGPhvyBdvlPoB+iPluPP+hcFPW+EM
+74aWnUJQmqCpqHYMRbFR2mD9pEsrjGxtAcz0dpNEARBEARBEBHx2a6GlESk
GK5iKCy+Js7xJVPfou7AERhbW9FY+QHalPyZPPdhFvzWQ+M9luAZvenLYSXl
SWZxVY238Fipfr3GGu/c8yf47UWkHNhhN6hdl7Drzw6gNiMxPB+E2uc3XB+x
2LP7aDHsQkJKUbhGIgiCIAiCIIhlwezMB7jVbkWj+VP0B+WMWMCE8xOY7W5E
tD5XWlcxKjPorzqlWEuDG7Mhd08zRqKl/34ziq4LzehadTtaYx/5YfVvTGiI
VvsmZtamj7jJflwxW2Btvx05BwlBEARBEARBbCmW4PnlS9Rd/VEhD48Xk45i
bPvH+xJRHxEEQRAEQRBEfFnAX7+Oq+QGZbmjMrCn+WHkmqNbHuojgiAIgiAI
glg3ltxo3LUbFc5n630nGxfqI4IgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCILY2nhnMOpshanoX7D569kt4uVoH+yNZ3AsOw26
hG1IyzsH6+DTKLW9CYIgCGKzw8HreY7JyUnh318v58NrwRJbEs7zCHes1QHb
J6cUZsdPmNJQQ3hlLMEzdhdW4zFkp21Dgi4NOSdqYe0axOjY97Aev4jBOXYP
/NicHsGdzjY011bw91kUUot4s7KZ2rWA6ZFv0WlrQm3Fe8g+/BlG38b5J73T
GL3XjXbrRRhLD2Gv8Q5m4/yTyngwer0U6SnvoK7/r1WeF/kxMPktLKUHkKZL
QMK2M3DOLsH74iEc/JgwNt+Ac3AIQ/1fo7k0i38/+c/o3kHz8Ot1vOetBef5
Hfd7HLA1m9d5nK2QmOtPxqsu40rh8MZtwW7dUcXajqrMDcC0YyeKu/6MPt65
cThOfgzX3MZ8M7wuM5ITiuCY3Cg7EB64zJlIKHBgMtLH4l4XdRV48xMad6fi
kH0shnmRw9xgHXYklqLrmcoz2QxtF9D4LNcdtjbeRpV+L0qb2+H4woS8/db4
2x3EOiM99+1IznwHBQVHkJeZggRm+/D6JL3sa4zHTZvwmmT4MxhS0lBguYsx
D3vXvfBMuHHrWjkymY0WMgdwswOozUjk7y1vA9vv0eBtzpA+XZN2LXkR86MM
+84SZgc/QgYbH3vXan6Yx7i9CIn8b26rcK6PvciNwX4omX8+OuwwDWBudS8O
r+cVPDO9qNjG9+vuRgw94d/J3OOwDr8KXjcXR2DN3c7fx47otldc73krsprj
jONfnaW114Ix2kDSvJNoaI/jPL9MYrYdNdiNfqR5LBUG+6MNefZIuiSeeOBu
zIbukB3jmof9SwyaMpFY3IVnat/ZFG1nbHRd8hbz06MYuFGH/BRdwC6adaIi
m3TJlsc7BkfJEVT1PMG89K55X2Gs9yNkM12QkIaSron4rK+SjZXRoLBntYDJ
3hrodSF2+tufYd27bRPrEn49HPoEDXemg/8c73ZxMxi62IQ7szG80CrfeTtq
xd411SVv+enoDLatpy5h2mHqAW7f+gHjnvhUlJP6VZd5CEf0B1E7MK3w3rG6
dmlI0B3mx0k0pRH/e95arN4442bv42LDt2s/VmOxgdj7bc71nb/x83yxY2yD
2eevMdJ8MIZ5xvdubCvrwUyUBYs9H3NWkm//LaUUjvGNt5asmi5ZNbt4K+kS
jjc/WpAVy3rLbOJtu1DWE+HseVO0nbFRdckruJpPoKCoEmZrB/q//wKlbK+O
dMk/CHZW3oz3mh8g/M2chbvxgLBmRdwfWMmvj9txSBfBvuUm0FWSB9Pgy8Df
Nrku8a2He1DhXEtdwrTQRWQlMf8grS+0+nf+mbok3gTamJCQBH3tPbxQeufm
fkRj1m4YbCMK7yyxMlZpnIn2ftJ6jFXNNtACJnvOIZ0fa1kXv8QXJbzWTTyC
loevNpS/n2+u0TgnCnZjWvjcGop3Aj2VvE2mO4CLX3+KkhQdEvM/wcMNpt1J
l8QZYc1Nxl7rz4i+jIlzw7Yoa+hmafuG1SUhCO806ZJ/FgsY67CiZ3JR4f+J
/r1xtD/9ukSXrbI3zM7lL+Gk3F9lE+sSzvMAVsMuYW9y7XSJ5CunE+MWtDzI
yN8hXRIP5jFqzRP3b8vRFfZOsrOP/8Fe9S/U3vwVno1kPG4ZVmGcca8wbD2G
lPUaq5psIOksWocUw2cY5u1xny9vEj/2joX7Dq4nb3+F7UAqspofQmmVCrCE
mZ5T2Jb6Afoj2o1/oLdqP3QJu2CwPuDfo/C+2CiQLok3C3hsOwJdVgtGFqMd
sP2FnrI0pBr7Ir/Tm6btpEuIzYnP/oyjb7rfV57ZYu/C7JT5kqnelNx+f4Up
dwfMQrywDsn647D0/angi8DbdC9H4WytQ1mZEfX1RpQailFhboNzdEb8PIu/
74YpW7yf1OOwDvwurFvTI91oLNgl3qcB5s7vMDq94Luy5zH6mouRmpCO4rZh
dXtx8TF6LB+gKDNJ2A/PLKqG2WyG+Uo/JrlltkvM31RrNKHJZoet8QyKS+tg
uzcu9iOHxbFbsNQU+WJ1dHoU1dTzv9uAK/1PVWyP6N8J0iULz+B2XEBpDsuX
kAJ98cfom1wIv6z3OUZ6rsJYZMCR7N1Izz4GY0sPRl5EtjbEhy6zF3sx8+Ih
uiynUcDioJL1KDB+hnsTr0Paw/JY3UFrbRWqm2y4YbuEyuJymGz3MDEfPKn5
cj6cR1VjK27Yrwr9+fGlD2D2+9oxX9ff4OptR1PVcRw03Q1em7hZjN35FKaq
RthuXMc19psfN+C0OQY/Hu5PdBXv4J9/IjLMPwTeN+8sJty30Wo6iXKzA67J
OY02Y7zvmb/+pAsdFiMqjOdRbyyFoegMLB1KuTLEZ8G3ocz/2UqYbXcw+lL+
/Fls2UPc67LCdOIoTHz/c/PjuGetEp/1XhRbvsUku75w/yx32V7edmM5yqrR
PiKzp4V+uwvHtVqcyClSeKdKYO76OeR9jaJLoo7hOYz1tKCmSC+cM+syi1DD
3nHzp+j360x+Lnoxgp6WKhQVHEZ2+m5kH6tCS88IXgT12xJeDF2BIUOPYtsD
7To0mg3E99vjrmreDmdrfSHsE4H7WhisxXZhjnsPLUN/bxCfrjcYtx+FbrcF
7jcROkF4f3ZGXKs4z6/oMu73+a3l2zHhv9wrDJr2CHFYKYarGJpSmL/WAdIl
8ce3N5qNRrcn8ueedaE4MTPYd0OJTdN20iXEZsSLZ12lSEzYjUrnszjtn8n2
5UX/lczST2RaQQG//b4f5y7VoLz2c/QO/oDB7kYUsOuE5SmS4vozUdbxSBZD
I+6b6bJQ3vlI3ItbwozzHK8xWOxx8DrIPXWgMDH878It8Xb6vlz+XYm25yLF
BkQ8L9HYLm4aA7XZ0AWdZ4hreOj5k/Ruaz4vifwdvy7RV+KS6TRqr9/GoGsA
3Y2Fwj6xbm8LhuV953kAW8n7sAxNi891ETMDDcjibSNd1kUMzUbbo5TZi0fK
cfLQMdRcuw4HryFqCnb77IwgH3Hephuo522v4H72rUEhPlKCr2BWcOwri7kq
zvZ/l/NM4AHfvk5TjvBbwTbrIia7yrEjKG54HuOOUuyMZb9ciPFNDMSNeJ9i
0HoOeSxHnZB/Kx15FRZ0uP6Mrt3jfs++97Yw14Revwadw6j1MP9boT5o4n70
jpPoGJe0I+ffn9dlnkbnmM+S5F6NwTX0XzQXpPJt3omipk/RWHsVXf3f83+/
i+uV+/jrb0du0zf4TwOv62/cxZBrKPCOpJ6Dc2bJd3+8vnH1XUORMLfswykT
r9mNTbA7vuL1ezmyk9nfpT1z6V7VdYn2MRxJ27B+a0NJYROGJC3jfYYBIcYj
CVnm+5j134svxlZ49jvqxJyEGlC1gXznbe1VB3lbdycO5mXxc3uwzeuzg9Px
Tt7/8XPIHr7/nRjbAOcHWmzHyHbjAq9Jv0RVDj+uUrKRtz85xB4TbbS0XORl
8mMyvQRNzkfrfiZJumQNEHKDpGJ3409Qz/om2kJa3sNN03bSJcQmhHsGZ+Ue
pBTa8Tiqvb0S+LX6cQ/M+TtFbcJssN0wXOoO2UsV8dvvGSjrGpfpF8kuSgye
Y+YfoDlnO3QKuoGb6UVlqk7wM250ixaEdIYTGlcs9Mdu/ndDdRr73WM46hjX
oN206BKN7RLiDJJktphwEdEmCjnjipcuST2FrqeyvUX/+ZfchmBxSgexM3Qf
058rirczrSNRfDQCtl6YjvGOo6ssw7fXWdaNKU76TRYbFfKspDbJ1hefzROa
24rDnOsK6oKekYq9KbYjLAZr7gdcqLurWZdIPo3SOPVO/wqXy8X/+x793TbU
G0T9FWZLa+u31bxnbrITJSl7Qt4DDm+GW7BXJ+9fDvPDV5CjU3rGgT0AXRav
9ecC+sjnz5aIjNoBmZ0u9/sMjfmXbPhMlVi00HdKjJ0Ku5aapohlDEfQJcI7
uy/MdlZuF9Nug2hrbEK7K4azC0UbiNfpfR8iPZHXtuesuDM2q2jzBv722ne2
VLwXyckGWS2ddYLl8y3cEeEsRNyPUcyfMoU+ox6JaYdwzspyPr5SsMdkNpqX
nf82oFifiuSDrRhdR1lGumQtYHmySyJrDlG7BJ1jq7Fp2h6rLvFi0lEUsNGW
8y/ZDFesQ5l0CeFHtCdSS2B/vEbZRb3PMdxphiF9m38c6zJPwT4S4uusGoeh
ZA+IeSNDbXo/vlyBzKZNrewVc7iIa1yoP41fl8g/C8GWM++rkmmDSGjRJVra
5WsbqzU07ZHlUJ5/iqGWwvA8p/HSJWHxJeHt82m/RKTknUK94NMi/asWfdoS
NORqjLQHzWGRv59cwa6T1TrwejA97QnYc9wcJoeuoiAxuE2+fVb+HvTV6JSf
03lnMPlc7s+hZuOL/le6/TB2/oyX/vOHBTyfjHDup9g+tXGKoLgFbbVL4nXP
4jujuI4vYHr0AUb8vmaSXlDZ65bOiIL0o6RLtoXHo6qOSZXvRIrZEmxddi6T
LMtDq9xfsY1htbEq6bCdyKuok12D/yf5TAbdyzLRaANF1iVaRi3TTf24UmdB
6+cNqPzoW3FPIB5E2a/WtOctoWSPxWqjLWCy34q6xs/wudmIj+JUG+gfrUu8
f6L/ihmNrZ/BXGlB/1T8vAqj+Whp9fUS2DRtj3XM8zbh2D10OBxwLPffN25M
x/qikC4hJBZ/hf2oAeahmTWOf2RxID+j2/yuz/4S/HNCtFFM9rukOxRsHPH3
fLol2D9LslUDZxE+2/dAfgXO5SUjIbEEjqdsd5TZGlXYp2UfRWA1dUng/wt+
/i1NsN36EQ9vlId/dt10iZQ7QUOOnIhE6QN/34WvLdz8n3B1fAKL7TbcD7/y
5RyUtykoV+pO5NfeUInhULc3/Xvv7Mwmvw4Ojb5WAaRxGmXt859HabVf43DP
Ul9ryXng1x1quRwk3SLXY2ukS/z7D/K+Ud7biG0Mq/W5+IxjeQeXw1rpEjYW
T9p8Z9DcE9jzj8Q1D0kk2zEmu3HFuoStBTacFM/HuAk78uOU/0P781irvey1
0iXMR8Aknh0uYsJ+TGPOrGUSMTZJY3yTxKZpO/lxEZsIZqc1lKG694/1i3vk
XmO850MxNlPun4MY7XfJTlbfh/bb2EG2qnQ2ko6ynkl+JWL202FUOv8UY25E
u5DtuR49pqGOhMQq6xLvUww0l+JQdTfGhVhulc+umy6R7kdNF2olmjZT6tcF
TA5cQfGhWvRIcQ1qbfL+DVfbGTHmgJ1HZKHMNhQSvx3pHhYw5focldmpgTip
MhtcWuNnhZxD2zXEEUj290p1yQruWepDLbaYf01RsxkDOcgC97dWukSpbyL9
TesYVutzaYzGOY/gGumSpZFrOGF/Io7BCTgKMlDU9XRl9x4J1ZyuGvO3+lmp
LpnDSPOHgXwBkw4U6E6ga2r1Hb60Pw+536fCv/s2lCYlIdv8jfpnHkxo8A1d
I12y9BDNJ74U8xL4NJeuqAtT0b+5TMT5Q3FOE2viaI0V3DRtJ11CbBKYr8in
H6JuLTQJN4b2s23qseJ+bRAS97ms8xL1Gix+GztoPyRwjsL8M37/sxPHD14R
YrmlmBQWB/DwoRUHDsdSL3YVdQn3F/qq9yMxyDd/o+mSQD8mFjrwVLVG7hw8
85HuS6Mu0R2B7TGzq72Y6quFPlEWNxS1H3znTg7zUaTrfHa6vvquzDcleg5Z
4WzGEfBF1Olr0afhDN6336sl7504njXVVIzTPc8NwLSD129aamr7z0vUatMH
YknW/rxE6ptoflyxjmG1PpfOhlJRqBqLxtuXr1/HeNYWeh9ro0u4Z9/gzHkx
/mfJjcZdKXH0nxfPrOR+mnKEMblTZYyFslJdwnzKzuP8oM+XYMndiF1xqsn+
j/XjYucXZywYFOIIX/Nz3r742s/CPJWqstcjvv9a5jvGpmk76RJiExBRk/Dr
5fO/8Tws/+dKYLZkLsp71PLVyuo5yDXDsuJL1HLaSP8/CXubHwSfp7x5gOa9
SUJtlRMnCnBcqnkv6SXd/yHvnVzxPCWWNq+GLgnEVATbPhtNl8h84lRtaQ+G
rZdxU7GGTpR2SYjxx/7cBpK/U+i9K7Vpzo2O23/InuESPI++QqmQD0FuB6nd
wyu4Ovp8uZ6l2/H8gvbSDI3nGmLcZcI+mF2vIn7S166dyLG4Vhb3vpJ7jpqv
YAmzrpu4PcH6TbLF1TSX+P+D4mXWSpeItQs0xL3HNobV+lzKb5igmIPD14wH
sJ7/T9BziZm46RJe6/dfg/njD2A42obR+XlMOi04be7AT0OfIj8hkx+/Ufyo
5kfQdr5Tto/DYlR6UcvyZCVEqh/i0+PqcWi+caSt/u8ydAn3F/ovX8THNUU4
yuqZev+Ak+WDc9zHUKtBgw8Uh/nRdpzveCJ7rxb4/vsIOYp54Xz8k3QJN9WP
y+ZLqDGUwTbq4ceFEw2nL8Lx0wBa87cj2eyKGvc22nYZHXLdyp5T7Tt8HyZE
qMsTRfMyYtG9m6btFPdObHTYuK5RPSdhOTI/v/xfcb1k+SZdaLfEmCcmDNGW
CM3p5P9R6bwkxP6J9VyBxcoU+moZlkjaws9rDDe/A11qJXrC9kKkPFgJITmv
ZFon6O9akOw02f4xtwTvEhdju2T5qYLW6nmM24vC494V9rg5rxcR7zzCd2LR
JeAm0VOW7tuLz64Prm3Cch3cOI/TbdFql0fWJb4czhkBjSvNZUFrDT9ux9th
CIl7Z589fSx0H1wcm5p0Cd/m06fFeCPZHQt9pEGXiBpKpz+L1usWVFvu+Opz
hML3ldv6LxSa7yr/f0Xicc+yXNq6/ajqkdccWsQLdytON3wn5gnm9fNjOwpZ
rl6lWpGC9t+O1PJumT25VnHvTF+lIKWkU6YD1M4mYxnDsvMVv53Mjz3vEm9/
dKNMyFu8Hdm18ufIapo8xI3qD9E26gn8bTnzbLx0yZufYDn7DZ697ocxaR8a
3a/Fe/wJ7ZV7hdwFRVe+jxDXyvT3R7DIzy/nfoSl8DRa7z2BZ/EvDJiP4LDS
2GO5RTJ2RjxnmnM1IMMf9xeJWHUJs1s/wdmuP/C6vxpJuxrhFiZOlnu4HZWZ
/PhKK8EVV4Rc+szf98wncM8HnvecuxmF5Z/h3vgsFqfuwZxbEmYXbxpd8uIu
jOnJSMs7B+udR/BEtM3HhTHjMJdAn7wDB22/sJ0guC1mfp15hn7jbuxqdPvW
JpYbrf0MMhMSkVZ0Da5p9X7gnv4bZyz/k60js/w1T6C89R7GPXOYGriIXEXf
BpafbV/ks9BIn9m0bd+ice/MJ7u9CZZ2l0IdLWLzINYXSMlEXkEBCsL+HUZ2
WqYsX84y8+qHIbOtM0/CNvg7/06L12L1AjtZ7a8k6KtuB9thflsj1Gc9sB8Z
lrdKqpWgr5HVWxBrp2QUqdY39tm7CvvCwjqZpC1vYBBSrC3bG2xC79AAuluu
4CaruxFju/y5RRN2ocDcgb6+b2Az1+LSpXJksD7NMqFzoBtf9v8Bzr/HvQuG
5lsYGvwGLZZuWe0Kpcarf0fZ9w2BPE9B50GB/vftmehRUFEDc/05FOl3hT9f
5ZsJ2HpBNTfgq0NTfRQl8tpz/nvn+7mgAZ19d9Ftu4DqS2acymA1QnJg6uT/
9uU9/PGKn+eSsmHqm5Tl7mKaWB/ixxV4DsH7skyL7YHedFc2D/ps9x1R/biY
fWJBli4D79ec9MehJ2dXoNnRi0Hm9z3oRCerCVn6Aaz+eplaicc9w+9D6MsV
sA1pOcdhrK9BRcE+6IvbQva8pXraIe+ykF+sCBlhe+QadEmYT0U0XbIdOY33
A3ULWfxax0mFtkbIfRfDGPa/mynvobn3Pga7rbDcfMI/DakvxOecWYAKUz3q
jcf4+TcbVUH7QqtdvyT0Y7HpEm7MjrO8Zlhi735QPMUsb99kRY83Ys/i1Fcy
22gBjz+vh/WXwFzHYsgNYXvDGv1oIvriyIlVlyxgrM3Ma4ZZYYwF+fovDMG8
Mylq3NHbURtOye/r7a/4/GwbfvG/zCy++XTYedOm0SXCbzA7uho5yYlIOfgO
9icq2ea8jZ3H2xPJSUgvaoJzbFbcm/sNbWdvYHyJva+7ZHFKHBb4PtgZNSaL
vf/ng3Td28ftOGsdDtjq3BPYDZfC9+s1nYVEOVPZlG3fHH5c/rNquS7JVMtB
INszVsiBQ2wW5OtkhH9BeeGXWYdYgbejrXi/sR+PRwfRZTWjosjA66B3kce/
v0UVZtico7Icpiy2bwTO1krxfnk7p+Iz9LrG4Vmcxui9DpiDarJ/j3GZvSPU
jbbVodRwFKVCzelKnLb8G+5Icb7MPq2uCd/nZecsLdUxxLvLLul5iPbKXH69
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
9UqOF8+6SoUYmoSMBrjmOP/f2TO9xcZd+QU4XH+CjkkI4p8MPx+N98Kcn4kc
c5+4hsWLKLqExbz3nkfWPoX/x/2Fvur9/LqQhKzGH4WYPMGf58BJOMZlvhu8
DTDxYAh91hKfjtGXwXSuDMbmL+Bg83ZZDpLZ31OO+TRY6OezPoT1kwtouvYh
8tle2o46DPLzJ9unt5W8D8vQtLjGLGJmoAFZulDfnEVMdpVjh6Fdlj9gHuOO
UuyU2W7cZCdKdhTD7r93URvuPBu2dxdOpL21gC7RnzPDVP4RrvcOwDV4E40F
uxRynLB9wzaUFDZhSNJX3mcYMOf6+tp8H7PRhgQ3ga6SLBjsjwLrr+C/lC07
04hwz9w0BmqzoQvatxTtTF02agfkfofSGFI4L2H7wbaTKLTcF/UU36cz38Gc
xduDulyYh6TYDm3PKDKR7GtRk6S8g1rnH2zVlX3W19/F6Rmq2oQbt+MQ3+5G
t0fTnQjfeXEPtbzdG9S3Yhyr3F+CezmGH3+4AWNGIt+HO3Gs/gKqqqzoGfwB
g7zmLmWaT/cOmodfy64u7i1nvI+20dmAnpf6dkPokvj2m/DnFb2zS5hxnkMq
m2OUtBPzb9klO6vWPJZ912bPpzDXhF6/vSzFDvNax+/DH2ne4K8/eRtV+kyU
dTwK2IXeP9Bbxc+7uiyUdz7ynUVpmjPfLPsd43jN88A1gE5TjqCh5Pe6vPGr
guRTFOm8RF+JS6bTqL1+G4P8PUn7Y7q9LRiWP8OYnpcSsmdzpBwnDx1DzbXr
cNivoqZgt9APCSmlQWud9rEbfb6L1OfCZVc09iVY3Gg2/9ykuBF+nhxsxbm8
dF/7+DUrLa+C19IuTM5vmJN+giDWDC9ejt7F9fqjSNdJuXl1SDF8huG4nZ/K
dEmkfypnKdI8nKDLR/PDxxioO4EP+pTzGfrXldRT6Hoq29sS/auFPcNc/ncW
ueDPJxtgHWF2DT/vTv+GB2Mv+J7y+bvuDM1R4s9fIovPE/8Wlkdk7gdcqJP2
oESbO7EUXc/kO2mv4LpgWSVdokNqWRee+tchDot8G3N1IXbR3I9ozNoXFlPk
s/ESNOVB8H12B4qD8uBymHNdQZ0WXSLcQ1KID6H0+dDcMGq6hP89twVZO306
MoDY1/LnrekZRUPNvl7CC6cJ+RVW3BmTbPjQz7L4UnaOVYwj1p8R9rZx43AU
7oghJ47Ydh3/zCt7MeNvk1rMmPT37cixuGTaSOqrROxu/MmvXbln3ShPTVaI
QV3EU0fJ+ufjkohrv630neVZHIE1d7vC8+DvY/Aj7Df/IN53DGMZos2YsgeV
zmdB79+b4RbsZe/wDuk6Ed7B+QdoztkedF3/lWZ6UZnKcqIc4DVf4FsR58wV
v2OR5rjYxq8qWnRJ6Prhf4Zy/Rvb84rW3rAYNO84usoyfOtzWbfoAxrD2NX8
LNT6fBXGvuw+/GsKy4/scsHF/xvq/wY2vy0SbzuEIIgNDTePl3/8jIEbdb69
roTQeW41iXxews3P4LHaeYkAb/MN1EPPziiSdyInwl5+JP9g7qkDhSw/kqzm
QcTPC+tyIlLyTqFe8H2Q/lWLPkX8/RyyY1zYJhPjdHT7Yez8GS/9umABzycl
XwjpPDsJeuPXGH0p86N4/jeeRz2z0nZeEhZfErYOS3u4O5FXUSdrF/9P8nFI
SI6af5V71oXiRBbHWI1Oub+HdwaTz6U1Pcperec5pj0yT5H5pxhqKVSweVV0
CcszV7kbCSl5qKiXP6N6v++K/3lrekbRiCVPcCyfZYjjY0eonRP5O57p5/D4
28L8eu6jpSBVQcOpaTulZ/Qaw83vQKdYH2QDxZf4vhDHflvpO8vw7VunhM6x
bOyeLg3o/1jGsrQHrdhm5gP7ACOTc+L7q/a8mC6qww5Ve17a5w6+74gxGCt+
x7ToEi3jNwJadElY2xR+O6bntZz2yvaUgq6jcexqfhZq97AaYx+B/lb1tZTF
/FDtEoIg2Jzg/hg5bO5L/QD9ms9mY0FDfAmLXy1tVY81lHx+2F4ZP2+pZd+J
vGZK5xyBuVv982LdNs1x1mKOF2nfJ79O0V/Wl1NK9DdPOYxaRyxn16ulS0R7
Q2FdjgnZGRTzrcivvQGX3xbScs+Bzwg+8i1NsN36EQ9vlCt8XsUmEWpYJGq0
j7U9o8jEU5dIWm8ZufG4OUy6/o0WSxtuuV24UaqUIyAGu06IJ9+uMkY2mi6J
b7+t7J0VmRuAaYcuyL5k+yRH3xX3NRixjGUp76qm+Gy15yXpDrVcGZJuCbYp
I8eGr/Qd20S6JKa5R40o9y49Z6V8mVHHrtZnoX4PKx/70joa7SwrULvEv9dH
EMQ/F2nfJ275NrXk41rA9JOnKjHBCLaBI/gYRV4zw9cW9c9Lc3Us+a0WMOX6
HJXZqaJvWhIyy2xwTcljJZkvzxDaKnN98S5CLOpJ2Fx/r3AvMRZdIvXDKjxv
L4t7PYPsZJ2vzboslNmGZPFKUdZd71MMNJfiUHU3xoX1Tu3zKjaJ1DbN+XO0
PKNIxFeX+OyQ5BjGHIsP+A7NxUdR3fNEtDnU7LcY7LoItttG1CXx7beVvLMS
kt0l+X6y/y7FabkPVixjOaZxH+2dUrcZ/fOjbBxEz1m1kndsE+mSmOceJaLd
u1KbYxm7Wp5FlDPtFY39BTy2HeHHffQ9A6nvSZcQBOG3acP8SFcLrfVLfHDz
r/DcI78P5lN7GQeOt+I/H+fzc5x6fXpNukSTH1dgrzBivW7vHDwh+0fc/J9w
OcwwpG8T87XXom8qpF+FvS4HzAYxtlG3H9UqMTOy1q2SLnmJQRNvIyakotAx
rvKb/Hr0+rXGfU7feYfDLPkJJ8ly4kaKe/flNEjMssA9F03HqKy70j50Ygkc
T9UyxXrx2rMQ1E5Nz0iReOoScW8xqu+H7BtTd1GtT/XnhPCxCrpEYX8/4uej
Ek9dEu9+k760nHdW9nXJj5TlJHrlRnOeOdgHK5ax7P+sljk72nmJen1t//yo
+bxE1t5lvWObSJcsc+7R3l7Z7+qOwPbYpyWWM3YjPwsN/bfcsS/5KET1sZTO
VaimIkEQDN/6FL99ilh0CdtHPAOLPLcOi808VAb74znZuXIGynuehs2LEddM
0TdFMe5dKb5EjJ9QP5/xYNh6GTeFfJuv4Orok+WtZblOfkF7aYYsVoPFhP8H
tydlsy43i0ft5UK+nuj9v1q6JJC3UTUuk+9z6/n/BLUnjDk3Om7/EZwf6NFX
KE2V27Pqvu2S73Tw32PUJZIPtep6xmF++HOcv8ly5mt5RtGIpy6J9T2U9uC1
6o8Y7Dq/z6OSdt1ouiSe/bbSd1aG/1w6A8crSpAX6kcfy1hWyr0RxBJmXTdx
eyLyO+j301K0G6X/H+zzH1mXrPQd20S6JKa5ZzntRSDPln+ejmXsan0WEcbH
Cse+T4snIsOf20ENX7sScz6Gm+LeCeIfAosxfiWLlZP9n9kB1O4+GJLTkBPy
w7dbmtAek7+CEtrrvQs5CHd/KItzYfNVIXL9MSWBvJtKdWMj6gwhf1RwXafI
8SiT6ClL9+0vZdcH5673PsfwjfM43TYi3hffxtOnw/bNfNeX1gA2/9fgWKid
J/oQR5/nZWc4/v1Nvs+8rA9i0SVsz60bZUKc4XZk196V1TZhNU0e4kb1h2gb
jZJ3lb/u6WOhZ0niffh1ido9Lwby0AS1ex7j9iKFuHfpjEeW/4tbgnfJi6me
Cl/eUt0B1AbVMFjEi+EbqD59XawfrOUZRSOOumTuB5gzdkY4wwpFeq9C7t37
CHbDSuPeZTmFwt6zgK5duS7hbXXje6iwDsjqBYXqEl7vjt6EufB9Zb/DuPbb
St9ZOVIuJbW9jljGsiz/sG4/qvz+POJn3a043fCdmCc4wryx+Cvshb64hPB6
d2Lug9RK9MjOZKKeSa/oHVsDXaJw1sR5vUJ+vJh0SUzPazntlex6+R5cLGNX
67NQu4eVjn1RQ/Hj81yrDZbqZjjV6r+4P0VJ4SWF+jDMD+0GLJYbMfjaEgSx
GfDllNRBl16Cpt5RMTcHq8/0M7rMtWgZeBqiPSQ7UG0vLZYfl/b2mD/ABbjm
wgSAr15Xz8coSt8WtHYuPrajcLcxuBa9UDcjTfAXCq2z4V9XdHlo9NccYefY
j9BRlhlWc1vJTyHovoTc/mLcH6tzVVEDc/05FOl3QV91W2bPs/ViD/Smu7LY
Cp/tsMN/Zu6b/5P05/n/DuyUCnm/dmRrOhf35/FNeQ/Nvfcx2G2F5eYTvp2S
Lgn3Ffef+wTtD0r1/3wxkcmZBagw1aPeeAz6lGxU9f4RXYsyvZOUDVPfZOCz
wp6wPqif1e75jfT3hF0oMHegr+8b2PixeOlSOTKYPZxlQudAN77sZ2cykp3M
ckk2oXdoAN0tV3CT5dWXai0I/s8pyCw4BZP5PIxFe5Gir5HVdtDyjKIRL10i
2o4x+VIGtENCigHmzrvo67bBXN2AS6f0vvfD1IGB7q/R/wcbEWp2nYrOmB+B
zbDLNz6yK2HtGYDL9T36bjTinGGv77xNX4UbA//D6HQ0myFCXwjPLxspOR/5
7Ba5LhHqQ5xAeuoxldqv8e63+RW/s0EI+WaTkVLSqXwWqXksA4HaTgnCfkRa
znEY62tQUbAP+uK2oHyr6vNGYI7TBV1fql0TXnM38py50ncsMBbDfctiHL9q
+NejXTA038LQ4DdosXQLfsGqbfOfjYT8dizPS/lmApoxqM6IeO3/z97X/TSV
df/zB/SGSy9ITEgTLkyMIVxozBN6AdGQgHFCiC8haIYU4pjCGAEnFowUjNQo
NCOgY+PQOGN1aPiOOI/oUBWcAM/QeaZGiVNH8YFRZgRRSeUHUuznt/d5aU/b
c9pTKG+6P0ljbA/n7LP22muvtfZ6qdmPUtt9mZrIanj3ucq5UKL5Ivcrrg78
eqR9UY2vxNz51DxUtLTD2T9IZEkfnNdsaKr8EkbrPYzK5dOLNmRE3XgGBoY1
D98L9NvqYSjIRCrdw3L2QF9hhvW6CyNeub1iHq8Hz5F9SYcSm1KP6hjwT2Lo
5hVcMBYIPdvVfAQ/jqRXsibXjC6PaGOQ/XKkBy2cviTotE03MCToRcG+WDWw
fX8y2L+4pAbW20+C70H74N5zoNmQJewpvG7c6x4Ne1ex50Q5CmgPXk06cg/W
o016Lw4TuG3+Cg1NDag2nsQFezvfG7f+isTPQ+T87UaUN5yBuboadUL/rDqj
GXa1Z1JETxu68hVyxB7HzmeYmRvHkPNbVAj2k0ZXibbu/2LUO40Jzy+4Zi4S
6M+/48CIV9hPZjHu7oC5bBcyU4nNmr4DB01tkv4bMTB1F+byejSZj8FYdx52
B+0nXIN6uyu0T6fcmP3888d6mrl+ysnk2QYyNq7n9cwj2Mu2QZu+E4dbfwnY
fn7vA1zh8i9p7+Wv4RyR9Db28b2Zy0T+zv0CprY7GA6JCVAzR7GwVHYJ7wdQ
ivNXhO85eixlyE1PJe9sgNlB+3x/wIznCsp0G8l3hzmfw5z3fxi4dgqFQk1w
beEpXLv3BybmpjAycBXVOeuFmjtU1/kPkQlCP8aZEdwjcuMg1/N6Hf+MziE8
7z6O7AIDTNZO9HvGVeQhxaCFqN9pS2H33OXtknYXX4NPq2STLD3dfIlYsyGY
w9j1UzgV0jM0fGxqeFkA18+7DSYDWcPaDOQUS3u9S69TWoPCz8I8G4r2w8D1
ja9EleX/JD3ooVJmLnyN+b0jcDmvwly4KciL7U64Rom8WiD/yoPsIUNX+Vzw
1GyUWJwYmfl/mBhyoq1im5A/sQ0VbbfIs6cwN/EH7oU/e+B/wXeOZ75kX5zQ
tfcqmqsPYlf+Hhwk9DebjqCCyGKnR6a2smrejT0XUWm+KN73YfxmHYqMP2CI
0MEn7WPP+cHyY+gfIm1eYbClGJs3H4RNUQYwMDAwrF6ozclkYFgYlsgu4WLt
NqGsK07/+5qBCloI5zOarZn4V3IyNmVuhTZWfu1HTzcGBgYGBgaGtQpmlzAs
LZbCLhHiuxfbT2ZVQw0thPwyrSZQ0zQ8TjMUnwLdGBgYGBgYGNYqmF3CsLRY
AruEi13fiDRjzyL6s612qKVbsO5B0uaT6J+KEgvzSdCNgYGBgYGBYa0iek4m
A8NikXi7ZMG9ytcU4qCbyvpanwbdGBgYGBgYGNYcuBz779Go3yrkZG5Egeki
2jsGMCrXn4OBYUGYxajzG5jtbsSoogy1sUvvPddx2vJTjHqiax3x0c1tMceo
r/Wp0I2BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
YbXAj7mnduyj/eA1Oajrm4ja32R5MI2n9lJok5Kg0TWg73WUPpDLhbnHsO/b
hKSkFOjq7uH1yhOJgYGBgYGBgYGB4aOB3+uCJXc9krRZyPlXCpLSDqPzxewK
jmgeXvdZ5Go00G7fjn+Rf9PKOvHCt4KGgP8N3JZ8aJI2YHvOFvLvZpR1jiBa
JxgGBoaPDXN447mNNtMBfG77Ax+47/zwvfGgx96EyuJcpGuSoEnfhaPWPoyt
pMxiYAiH/wW6yjdjXYUTUwm/N+11eAUXjAWcPzFJ1ScfVs9MokfyccM3jqHb
P8LWUo+K4p3YbX0kyKElxNwo+q+eR23hFqGPJfmkZiK/sBB7iT6UkbMbRYZj
aL7UBdfY9NL7tf1ejAzchMPWArPxIAqyj8M5JaWCF57LBmRoP0N979+rwM/O
EBf8E+iry0GyrhbdY7Nkuu/DWpQO7T47nq5Q31T/63uo06VBV32L7OvERnn4
LYq06dhnf0y0gpXAPF73NUCXvB3V3X/B53+Lh9ZiaLWlsD+dXpERfXrwY8Zz
GSUZm5Bbfxfjq17QrJRcnMXE0F1cszWjruJz5Oz+Fp6l3rR8E/Dcu4Er1jMw
GnYh23g78TqPKiwxzX3P0WMpQ276OrIvp6PCOUG+e4WHjgaUGVvgcPbBNdiD
zpYyZGqSuHPV7Jb7eJ/ocTAwLAgzGHEYOJthSewSEf5h2Hel8rprtlVe/vim
MNJ3juzrBcwuiQk/5okeFCLPiA3YX5dNaLwO2cthl4iPfeHAvuSksOf64fOO
wt1pRgEXc5OFMvsDeJfeOIFv5AqK6HjWHQm1SwI8qMEGUx+YlibDQ6sWs3jR
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
0NPzE2zmOjQ2lnO18jVZJlzru4GrvdTHKtb25HMA23vI+3Z/D3NVI3648AVX
V1hb2IQbAx5MiDRX3EuDZ0RKcUqRmA342UPmmuuZrsfm8BqLAX1oPXKbBoK9
Kf3vMNJxSMIH4pCEvhycr1qLzMLDMJlPwKjPhlZXK+lxIL23XL5LMKc+SVsE
87U76Llhg7nmFBoP6/h1YupA340f0fvX+yg8JOnLEfJ8oX7LZn1Yrd5Y60fN
mogCzv7Qhdbn9P2DwdZiZOSeVNhzJX/O5VZEqx0qoZvKujS8/fEvSa1X6r8Z
QGuRDrl13TK9S6UQZGrArvHjXa8FJ0PiwOMdk2B/hNTdJrrF4HkUZeQH63NH
vgl8b9+CH8YE+k6Z0TGiMn43IM/p+juFaz13cMN2GjWNZhzenExkby5MhAdv
XL2Hv96S9ZiSA1PPmKQOFq2rpEtYHFfEepb7m3jG7BfngNZRbUb3YB9utJ7D
dY4+ynI2+HqCTAyP2Qr04uL9OOm5B2BsqEVF4TboSi5JZEmi951oiCIXlWRp
4NxCpV0SoP0mFLXcxGD/T2i13ODisBXlh9Iz4pGZ8oMJ+mVC+oQI967Zj1Kb
tNZ2PLL1ucq5UKL5IueSq8G/HmlfVOMrsbZOah4qWtrh7B/kevs4r9nQVPkl
jNbI/qf8PWT6IDMwLDOU7ZJ5vB48R3QRHUpC1mkc8E9i6OYVXDAWCD3b1XzE
OqpejPTzvbM0uWZ0eUQbg+hIIz1oKdokXE/026YbGJqYDXmfJF0NbN+fDPas
LqmB9fYTSU+7KQzfc6DZkCXIOF5P7nWPhr0r1Tto7/RyFNCesJp05B6sR5v0
XhwmcNv8FRqaGlBtPIkL9na+l3v9FYnfgeyltxtR3nAG5upq1An9nOqMZtjV
nkkRnXjoylfIEfsdO59hZm4cQ85vUSHsYxpdJdq6/4tR7zQmPL/gmrlIoD//
jgMjXkGnmuV7kpftQmaqBpr0HThoasPt4anYcSVzo+i/KulFxdmChFca29B+
cwhvFG9AdP2eZq6nbzJ5noGMx03pM/MI9rJt0KbvxOHWX4L7ru85eluPoDBz
I9JzPkel5Sd4vD5M9TbhQPVZ2J1uPHs9w/fJdP2My1yPs7D59I7A5bwKc6HA
M3R/aXfCNeqN/Z40Ln70HmymMhQVGYgeQfbACqN8f2aJ7VBr+xZ1ZV/y1xsO
kn3gDoblfNE+vsdxWUEmUjld5QuY2qTX0h7ev8DRXCbUbxb0qt77ZH6ltfef
o8dShtz0VHIPA8wOOj4yds8VlOkI7XIPo7XvBc9jcjwkVQlmRnDPVg9D0X4Y
uJ7Ulaiy/B8/T4GL1KwfNWsiOvzeP9HVWILcgi9hMn2Jgpy9OKpEy3DMu9G0
aR22hp1HSC7gZZwYw60q/5PMx9ObaNy3EwWHj8N0eA9yCo6GyhZFiLp0Fswu
Km2JnWK5GFZrbAFjInPxtKsR+3L34LDpOA4X5KHgqFXdOibr8cX1Mzipwici
eSDRm+/CYtiB9GQiDw2n4XC/pNVU4bEfhk6bgdzDF9BHdcSpuzCX16PJfAzG
uvOwO2gP6xrU210xzoLoGdN99Fw+IvhOUqCr/A49lL/mJuC51xFcz5o8VLf3
wD36lvzNf9HdVhn5N/44xkzf0PsAV7jaJLTv+Ndw0jx571Pcc3wNQ2ZKUI5c
6yXPFeQIJ4OcaA+Rt1fhdI2E7ju322AyEJlLnplTrNDrPaH7jsIsKspFQseR
/0TsG/fIHjzn/R8G2o8hRyqLBv4Xg/fJXA5d5XO5U7NRYnFiZOb/YWLIibaK
bUJ+5TZUtN0iz57C3MQfuHftFAq1GvlnxJSZMUDnoPcqmqsPYlf+HhwkMs5s
OoIKsvc5PTL1eFXL1thzoUxzykOLkZc+jN+sQ5HxBwwROvikfew5v2M+9BVm
WK+7MOKNomn4X2GwpRibNx+E7eFi+68yMDBQqM3DZWBIONTW8mVYBggxoUS3
UdO7g8qN/GXwD/rHHCjSpCDP9ifmX1zD8YvKOadLPyZ6Ht2OY+d+W6ae9AwM
DAwMDJ8WmF3CsGJgdsnqgW8YHTVmXGj4TIib+hCMWwoHrUFuOYkrT5chaiGQ
D9KBO5avQ+NTl3lMfu9vOFd/TbauIQMDAwMDA8PiwewShhUDs0tWGDRW53fc
cT/DH1dO4Zz7DXzuJmxKykFjTy8unroeqYP7XsF96Sy+W7aYBaH34kYdSr/z
yJ+VLMeYuFyHIpRd+YOdlTAwMDAwMCwRoufhMjAsIaLmpjMsPWhOcgFX07PE
MczHiXO5oCnK9f99kxh7tZx1Z3wYc+ihCenfs9xjmsGIwyDkDqxHrsVFbBOa
Z9GA073x5JkwMDAwMDAwyILLsf8ejfqtQh7uRhSYLqK9YwCjsrV4GBgShXm8
GfoZlxtLhJ5xtH5YLdrar6N/lJ2bMEhB6xebcbx3fAX1//d4+2Yafpr/62yG
PiMblV2/o9uYt7heKgwMDAwMDAwMDAwMawL+KRe+/dYVUtt8xeEbx9Dtf6Mr
Zl0lBgYGBgYGBgYGBoY1C98YXD/1wDP5DDfPtYf2vGFgYGBgYGBgYGBgYFgG
fBhpx35tMrThfTgZGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgY
GBgYGBgYGBgYGBgYGBgYGBg+IUzjqb2U6xuj0TWg7zXLNVq98GPuqR37tBok
aXJQ1zfB6mczMCw7PmBmxI37f8t2IGZgYGBgYGBYEObhdZ9FrkYD7fbt+Bf5
N62sEy988Wi7fvjG/8TjVzL9QaXw/YNB61GUVBxHbclelNrur1z9Z/8Unj1+
iRgjXnXwe12w5K5HkjYLOf9KQVLaYXS+WM7+q8uJRPAV4e9nT/F3XPy8mqGS
Jmru5B3B478/Vt5JFOYx6TyKNK73YOhHk2eFZ8l6EBK+Hb4Dq7EYOenrkKRJ
R+7BOlg7++EZ/g+sB86gn+t/TPhhYgi3r11CS10FinP0sHrWcG86rjfAj7C1
1KOieCd2Wx8RC3Cl4IXLnImkQgfGVP6F/0UHDp36FdNLOq6FwAt3Uw40u+wY
WZWiUODjTjusjdUwFOTD6JyIcr3KufG5YE5NRaFjNPp3K4n3v6NpSxp22Yc/
Uh+jHzOeyyjJ2ITc+rsY/zhfkiEK/N4/cbP1JEwnj6AwYyMyC6th7X+hqH/7
X99DnS4NuupbGPORvfDhtyjSpmOf/THUeQJnMdb3LczfxbAx/G/gthxGTfdf
/Fim+2DaoIOp/02cb5gokHf1XEfrxT7y3mtkofgn0FeXg2RdLbrHZslc34e1
KB3afXY8XYkezTOPcLnkX9DmmtE7nmgLL3F85fc+Qkfrd+gbW+s6uEqaqIX/
LTwdVlzsU5YPnzz8I3DsS4uwSZI0/0L5jb+WSI8IyuFCyx0Me+ns+OAddePm
hXJk0h7ZyQZ0vgzOmn+qD3Wbk8nY8teYXeLHPNl3Qujon0R/XTZ5l3XIXjK7
ZB6+mHI/TrtEHHeyHvaR1TYHfrx3W7BFs5+M7f1KD0YZviewF9H1lo6KT8Uu
WfU242LxHiP2/dBQubmhXvCnMChDjWxaO+D11M8EnYzaqJfI3qZR5nffCDrL
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
zyuPxyOh2/IzN3Dfrr/L32bn+v1y4qfr98k6r85cV3NaqX8u8yzVYrLFyC72
IThutNd5aO+ueCp/r7VavXApWo4WYbExdy08hu7iFdr+eRP8ez8wrSnTcR+X
TGNsqBlFG2rQrfeGM33ekoxLZh5iqMmLDVUXMKr4dRbPud0zpH+fl9XKSklc
4sburUjiGgnzuGJz2bQ9f9O8LAfrVNTnXbyX4mq+xd+98roZq9Hg1O7sxu4m
LnE7dtFP6xpOluUhQ9efyN4OX/C/NhoL8rz0HsOJV6r/SAh5Yxg/i8K0RYaa
VyP6ue17qBh4FP2jv0bR/fkWeLLeMeynzsqX24a0zBKcHXOitqHuFwakzViR
pvpXOVV9GE9YU5qMr+7wnaf7Acv3YzjKQdX8pPStCDy0G5vup5npmCYzB6mM
SxLPgehfsSoun0e+XnlFTE6xSvjJN6hctxdBs5pnfS7j8pHdkoI8rmTt3Kht
GfljUoNq+Lx+xmGrLaCNSz0vsf5sxI8wqdFR9lQDEgqUmn2RE1iD/oh+1Xy1
d6cY530xMjJWxWgrGHO9lsg/32irhewuLtHqkNINdT2CVMUlohd21ftIj+pJ
n0Rcou/B296jGTwLTdvflxSdl0Ts3kSnee7rTCFkub+exDXstHIV7YktyFwk
6smuK7oASs/xvHUo6/wZc7Opn63E6CzEfLeZZ8+0c8lk4hL1fGSTyMda2YDg
02E0fSjF7JG4sTu7sbuJS9yOXf8noTUYgBTRZXzfJkdLXiPOdFAXmBDiDM1f
y4jbI0ekRtC0dlLRQ/kOl/dvlP25uXfTzFgvanI3mPQ6MDA1jI5LD6J8jNDd
M/AuTYvJh05lXKL7OQn0oR53w5se77+qec9LsDphfzrd10ygj+t4DlIZlziY
A0UfJqbGVfybJ35PVundsOlj696JWp7Jy2s1pS4ucW3n4p16vA7Hbk8qYwyH
gjhQfgI3bM5mzGtljR94jOCZPtwPG/K0TOdI/7lRX06OFzr6o3Row6HbaPOu
jMmBn2f2ngyReuFF5n0UI7leieu7XcUl+v/ryA90G5dovbDTYp/nJOISvdbI
sp48jOc3T6Gu6/7fEJcYdNSs7F62lZvHDqDLZs/K9TUS9PAIh37A8aoGtPh9
aJL2oOlkt0m+rL4vYWNHz+W1ru689twlF5fM6TmsxCc7tuLD2PM9V3ZnN3Y3
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
EEIIIYQQQgghhBBCCCGEEEIIma/8H+VQ1L0=
    "], {{0, 406.}, {806., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{806., 406.},
  PlotRange->{{0, 806.}, {0, 406.}}]], "Input",ExpressionUUID->"3de3d2cc-ca8c-\
4af7-bd44-5db1d3d54087"],

Cell["\<\

We start by defining the up and down basis\[LineSeparator]\
\>", "Text",
 CellChangeTimes->{{3.7992825085831013`*^9, 3.7992825404587517`*^9}, 
   3.7992826441827626`*^9},
 FormatType->
  "TextForm",ExpressionUUID->"d0ea0013-371e-4f9b-a55c-1bd08cb35e8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"up", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Nu]", "/", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "\[Phi]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Nu]", "/", "2"}], "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.799282685310496*^9, 3.7992827880289793`*^9}, {
  3.799282863449608*^9, 3.799282863818263*^9}, {3.7992834733933144`*^9, 
  3.7992834755100527`*^9}, {3.7992851405107374`*^9, 3.799285141748189*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ece06511-2ee0-4a07-bc50-8d3f46cc4d72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    FractionBox["\[Nu]", "2"], "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.799282790951393*^9, 3.799282865269998*^9, 
  3.799283490406308*^9, 3.79928411000303*^9, 3.7992842166164722`*^9, 
  3.799285145713046*^9, 3.7992887798928576`*^9, 3.799616642801271*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"799552a7-3e6e-4314-9026-f22c8b26fec4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7992827937253184`*^9, 3.7992827996889133`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"27c7a82c-931b-4da0-a7e4-852a06e62868"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", 
        FractionBox["\[Nu]", "2"], "]"}]},
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Nu]", "2"], "]"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799282800316744*^9, 3.7992828684044313`*^9, 
  3.7992834930579214`*^9, 3.7992851500239754`*^9, 3.799288785758703*^9, 
  3.7996166460706577`*^9},
 CellLabel->
  "Out[2]//MatrixForm=",ExpressionUUID->"96119033-8508-4efa-a8cb-\
fd4e7c6a8559"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"down", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "\[Phi]"}], "]"}]}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Nu]", "/", "2"}], "]"}]}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Nu]", "/", "2"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"down", "[", 
   RowBox[{"\[Phi]", ",", "\[Nu]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.799282899959469*^9, 3.799282982241015*^9}, {
   3.7992834795349035`*^9, 3.799283482429326*^9}, 3.7992839438068047`*^9, {
   3.799284219346575*^9, 3.7992842238473577`*^9}, 3.7992851625626135`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"f78a07c0-fe0f-409f-a87e-68a82e63744e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}], ",", 
   RowBox[{"Cos", "[", 
    FractionBox["\[Nu]", "2"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7992829831334867`*^9, 3.7992834834434443`*^9, {3.799283945043927*^9, 
   3.7992839550417943`*^9}, 3.7992841301482143`*^9, 3.7992842387180486`*^9, 
   3.7992851633120456`*^9, 3.7992887883793154`*^9, 3.7996166485789146`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9d1e4d9a-a64f-446a-aa2b-18d4b77483bb"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Nu]", "2"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Nu]", "2"], "]"}]}], "}"}], "[", 
   RowBox[{"\[Phi]", ",", "\[Nu]"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7992829831334867`*^9, 3.7992834834434443`*^9, {3.799283945043927*^9, 
   3.7992839550417943`*^9}, 3.7992841301482143`*^9, 3.7992842387180486`*^9, 
   3.7992851633120456`*^9, 3.7992887883793154`*^9, 3.7996166485837107`*^9},
 CellLabel->
  "Out[4]//MatrixForm=",ExpressionUUID->"ea3c4e67-e373-4168-b2e7-\
1fa78ee88ec9"]
}, Open  ]],

Cell[TextData[{
 "To shown that this basis is orthonormal, we just do the internal product \
and we expect  ",
 Cell[BoxData[
  TemplateBox[{"i", "j"},
   "BraKet"]],ExpressionUUID->"7435c85d-20de-4adf-9eb7-ae30c4cd948f"],
 "= ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "ij"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e9c6932d-efb1-4563-81cc-1520b32da6eb"],
 " if it is an orthonormal basis.  Note that we do not need to transpose as \
the Dot function in Mathematica does it for us"
}], "Text",
 CellChangeTimes->{{3.7992830105432024`*^9, 3.79928302946688*^9}, {
  3.799283065924965*^9, 3.799283079109084*^9}, {3.799283159694938*^9, 
  3.7992833175863085`*^9}, {3.7992833931125355`*^9, 3.799283415672496*^9}, {
  3.7992836714296913`*^9, 
  3.7992837085857725`*^9}},ExpressionUUID->"a23cb79a-3af3-48b0-89ee-\
6126c9f2b67c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"up", ".", " ", 
    RowBox[{"Conjugate", "[", "down", "]"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{
  3.7992834632728095`*^9, {3.799283499376796*^9, 3.79928354053242*^9}, {
   3.7992836476639256`*^9, 3.7992836624222984`*^9}, {3.7992837362983932`*^9, 
   3.799283751223963*^9}, {3.799283787652979*^9, 3.7992838539350014`*^9}, {
   3.7992838914605026`*^9, 3.7992839127016826`*^9}, {3.799284251940059*^9, 
   3.7992842719629903`*^9}, {3.799285173601668*^9, 3.7992851773964043`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"86b83555-63e7-4cbf-aaf5-8448f5255c68"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.7992839133255596`*^9, 3.7992839669188433`*^9, 3.799284134739996*^9, {
   3.7992842472535086`*^9, 3.7992842726898885`*^9}, 3.7992851783567853`*^9, 
   3.7992887965624824`*^9, 3.799616653424301*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2511ef9c-4cd5-45a7-af8d-0d56886b44b0"]
}, Open  ]],

Cell["Or alternative and way better looking", "Text",
 CellChangeTimes->{{3.7992841961603746`*^9, 3.7992842035102577`*^9}, {
  3.7992843014402027`*^9, 
  3.799284311855729*^9}},ExpressionUUID->"ca24d7fb-f527-4c47-8ef6-\
2a89cb4e521d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"up", ".", " ", 
   RowBox[{"Conjugate", "[", "down", "]"}]}], "  ", "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7992842867232275`*^9, 3.7992843192756786`*^9}, {
  3.799285184409082*^9, 3.7992851890336027`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"44dd5788-374c-46c6-b53d-6b2518e4689e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7992843201536674`*^9, 3.7992851903156347`*^9, 
  3.7992887995747623`*^9, 3.7996166558360243`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"20025681-e626-4c85-adcb-842008a73f5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"up", ".", " ", 
   RowBox[{"Conjugate", "[", "up", "]"}]}], " ", "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.7992843247441254`*^9, 3.7992843860295115`*^9}, {
  3.799285195841226*^9, 3.799285200087322*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f74f5f11-2be0-4da7-ac07-f898205975e4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", 
    FractionBox["\[Nu]", "2"], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", 
    FractionBox["\[Nu]", "2"], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.79928435688078*^9, 3.799284386529766*^9}, 
   3.7992852011882324`*^9, 3.7992888025993643`*^9, 3.7996166592174406`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"51e1eb7e-b0db-468e-bd1b-329b80775871"]
}, Open  ]],

Cell["\<\
That\[CloseCurlyQuote]s obviously one, here we are in need of the full \
simplify\
\>", "Text",
 CellChangeTimes->{{3.7992843943976774`*^9, 
  3.799284428820566*^9}},ExpressionUUID->"15650405-3322-4d38-96d9-\
6c2d2a247759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"up", ".", " ", 
    RowBox[{"Conjugate", "[", "up", "]"}]}], " ", "//", "ComplexExpand"}], 
  " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7992844366278486`*^9, 3.7992844437711964`*^9}, {
  3.799285206569507*^9, 3.7992852169140816`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fdb2a1ef-294c-46e5-8516-47f68b7c02f2"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.799284444333542*^9, 3.799285218411273*^9, 
  3.7992888054418664`*^9, 3.7996166621221123`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"cbcb548a-be46-49bd-b2ab-a7d16fc90298"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"down", ".", 
    RowBox[{"Conjugate", "[", "down", "]"}]}], " ", "//", "ComplexExpand"}], 
  " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7996166650042067`*^9, 3.799616681783123*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"75e5e189-d6a4-4845-a41e-b6b6de26080d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7996166826578927`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"c0e2be22-3345-4d9f-b1cc-cefbc32a6c55"]
}, Open  ]],

Cell["\<\
To show that the basis is complete we need to use the Kronecker product , to \
construct matrices from ket-bras \
\>", "Text",
 CellChangeTimes->{{3.7992844707739754`*^9, 3.79928449540069*^9}, {
  3.799284646641644*^9, 3.7992846563935046`*^9}, {3.7992848563184905`*^9, 
  3.7992848756130877`*^9}},ExpressionUUID->"931d8688-9266-4217-ae8b-\
34f262e19add"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upup", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"up", ",", " ", 
      RowBox[{"Conjugate", "[", "up", "]"}]}], "]"}], " ", "//", 
    "ComplexExpand"}], " ", "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7992848790076914`*^9, 3.799284999143321*^9}, {
  3.799285225112565*^9, 3.799285232686343*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3539fe5c-165f-4685-bdad-cc4c5649f464"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       FractionBox["\[Nu]", "2"], "]"}], "2"], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", "\[Nu]", "]"}]}], ",", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["\[Nu]", "2"], "]"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7992849473307924`*^9, 3.79928495720916*^9}, {
   3.799284988384137*^9, 3.7992850020489826`*^9}, 3.7992852494754124`*^9, 
   3.799288809881153*^9, 3.7996166875749903`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d5790925-a5f1-4693-8956-b3bb57e74812"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"downdown", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"down", ",", " ", 
      RowBox[{"Conjugate", "[", "down", "]"}]}], "]"}], " ", "//", 
    "ComplexExpand"}], " ", "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7992850228969603`*^9, 3.7992850372302685`*^9}, {
  3.7992852371002893`*^9, 3.7992852442961097`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9e72918f-a0f1-4795-9e2a-b8214f6b896d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["\[Nu]", "2"], "]"}], "2"], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", "\[Nu]", "]"}]}], ",", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       FractionBox["\[Nu]", "2"], "]"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7992850387295585`*^9, 3.7992852455176964`*^9, 
  3.799288813929332*^9, 3.799616690235526*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"bcd04d7a-6fcb-4787-8bcb-166eec9b1850"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"upup", "+", "downdown"}], " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7992850465934896`*^9, 3.7992851096253357`*^9}, {
  3.7992852545112143`*^9, 3.7992852578200893`*^9}, {3.7996166936123977`*^9, 
  3.7996166952300615`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"df62cba3-97e5-47f0-bbf8-0f182b2f33d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.799285085092825*^9, 3.7992851105746064`*^9}, 
   3.7992852583140078`*^9, 3.7992888188412285`*^9, 3.799616695854184*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"42249cee-fb66-45b8-bf56-bb5b08f3758f"]
}, Open  ]],

Cell[TextData[{
 "Now we are asked to express the two vectors that compose our basis in our \
basis, to to this we simply use  A=  ",
 Cell[BoxData[
  RowBox[{
   UnderscriptBox["\[Sum]", "ij"], 
   SubscriptBox["A", "ij"]}]],ExpressionUUID->
  "c4efe04e-848a-4c89-813e-3056293a002e"],
 " ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"i"},
    "Ket"], 
   TemplateBox[{"j"},
    "Bra"]}]],ExpressionUUID->"8390ce51-0ac9-4dd0-ba59-8646834c7cb7"],
 " ,  where  ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["A", "ij"], "=", 
   RowBox[{
    TemplateBox[{"i"},
     "Bra"], "A", 
    TemplateBox[{"j"},
     "Ket"]}]}]],ExpressionUUID->"ea5eeb59-ea5e-4c7e-8451-33a120c3b5fb"],
 " then\[LineSeparator]"
}], "Text",
 CellChangeTimes->{{3.7992852944991465`*^9, 3.799285324695438*^9}, {
  3.7992855252239785`*^9, 3.7992855320857077`*^9}, {3.7992855772961025`*^9, 
  3.799285699983721*^9}, {3.799285735923514*^9, 3.7992857656889095`*^9}, {
  3.7992894663055925`*^9, 
  3.7992894734980392`*^9}},ExpressionUUID->"92a0e08a-b85f-4504-81fe-\
144b9351ce62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newup", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"up", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "up"}], " ", "+", 
     RowBox[{
      RowBox[{"Conjugate", "[", " ", 
       RowBox[{"down", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "down"}]}], "//", 
    "ComplexExpand"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7992858852400866`*^9, 3.79928599743342*^9}, {
  3.7992860463732452`*^9, 3.7992860621683173`*^9}, {3.7992860931866016`*^9, 
  3.7992861265219817`*^9}, {3.7992861569633694`*^9, 3.799286243258184*^9}, {
  3.799286275235675*^9, 3.7992862787016883`*^9}, {3.799286370821147*^9, 
  3.7992863959019175`*^9}, {3.7992892017861443`*^9, 3.7992892489767833`*^9}, {
  3.7992893604263587`*^9, 3.799289415708626*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"99696f18-13e8-45ef-a760-4c3faac2a22b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.799285890813614*^9, {3.7992859368418093`*^9, 3.799286011078656*^9}, {
   3.7992860498159466`*^9, 3.799286063492524*^9}, {3.7992860947974334`*^9, 
   3.799286104802578*^9}, {3.7992861589210477`*^9, 3.7992861942779512`*^9}, 
   3.7992864122852516`*^9, 3.79928883142222*^9, {3.7992892117987375`*^9, 
   3.799289249509095*^9}, {3.799289392720096*^9, 3.799289416172188*^9}, 
   3.799616698937583*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3d9b0238-2afd-4b79-8ade-ca09f1332ee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newdown", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"up", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "up"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"down", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "down"}]}], "//", 
    "ComplexExpand"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.799289255028455*^9, 3.799289286490424*^9}, {
  3.7992894842609353`*^9, 3.7992894993035316`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d4f9dc1f-9467-447f-9c2f-7aea19d5b9d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.799289288730349*^9, 3.799289500096891*^9, 
  3.7996167018278327`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"be91871f-cb4a-4d6d-bdb1-086e25c4da70"]
}, Open  ]],

Cell["\<\
  For the next section we are asked to express the Pauli operators as \
matrices in this basis\
\>", "Text",
 CellChangeTimes->{{3.7992864851538067`*^9, 3.799286565732088*^9}, {
  3.799289309543492*^9, 
  3.799289311464826*^9}},ExpressionUUID->"e7afad75-4426-4b71-94b8-\
6b0e539cc039"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Sigma]", "x"], "=", 
  RowBox[{"PauliMatrix", "[", "1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Sigma]", "y"], "=", 
  RowBox[{"PauliMatrix", "[", "2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Sigma]", "z"], "=", 
  RowBox[{"PauliMatrix", "[", "3", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7992866246541967`*^9, 3.7992866793501835`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8eaaea5a-9112-4112-aeba-827f4d9579b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.799286777803469*^9, 3.799288833984*^9, 
  3.799616704338041*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"fe0fc348-2390-4ace-bd98-869bb2fc6132"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.799286777803469*^9, 3.799288833984*^9, 
  3.799616704345109*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"18b74401-d147-454e-81a3-e09320ad6a69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.799286777803469*^9, 3.799288833984*^9, 
  3.799616704350135*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"be895eb9-e540-4934-b60d-460c91f85f24"]
}, Open  ]],

Cell[TextData[{
 "To express it in our basis we use the fact that the elements of an operator \
in a basis are ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["A", "ij"], "=", 
   RowBox[{
    TemplateBox[{"i"},
     "Bra"], "A", 
    TemplateBox[{"j"},
     "Ket"]}]}]],ExpressionUUID->"7fbd9c9a-95bb-45de-910f-04bf43f69883"],
 "\[LineSeparator]"
}], "Text",
 CellChangeTimes->{{3.799286789559856*^9, 3.799286811321231*^9}, {
  3.799286866532301*^9, 
  3.799286955473714*^9}},ExpressionUUID->"7b3ecec4-7738-4322-8113-\
d854c89f66b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["E", "11"], "[", "A_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", "up", "]"}], ".", "A", ".", "up"}], " ", "//",
      "ComplexExpand"}], " ", "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["E", "12"], "[", "A_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", "up", "]"}], ".", "A", ".", "down"}], " ", "//",
      "ComplexExpand"}], " ", "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["E", "21"], "[", "A_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", "down", "]"}], ".", "A", ".", "up"}], " ", "//",
      "ComplexExpand"}], " ", "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["E", "22"], "[", "A_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", "down", "]"}], ".", "A", ".", "down"}], " ", "//",
      "ComplexExpand"}], " ", "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newpauli", "[", "A_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["E", "11"], "[", "A", "]"}], ",", 
       RowBox[{
        SubscriptBox["E", "12"], "[", "A", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["E", "21"], "[", "A", "]"}], ",", 
       RowBox[{
        SubscriptBox["E", "22"], "[", "A", "]"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.799286961418476*^9, 3.7992870112121773`*^9}, {
  3.799287071124093*^9, 3.79928718683041*^9}, {3.7992876020835876`*^9, 
  3.799287696837504*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"3cb954a5-a3b4-4256-8522-d5f3e24c9611"],

Cell[TextData[{
 "We can check that they are the same operator using    A=  ",
 Cell[BoxData[
  RowBox[{
   UnderscriptBox["\[Sum]", "ij"], 
   SubscriptBox["A", "ij"]}]],ExpressionUUID->
  "0b0feefe-873e-46e8-bfdb-9ccc0c849321"],
 " ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"i"},
    "Ket"], 
   TemplateBox[{"j"},
    "Bra"]}]],ExpressionUUID->"eb1989e4-b73b-4a86-8688-4b155d96a040"],
 ", for example"
}], "Text",
 CellChangeTimes->{{3.799287050794072*^9, 3.7992870511685686`*^9}, 
   3.7992871844733076`*^9, {3.7992872627718267`*^9, 3.7992873532315645`*^9}, {
   3.799287707408535*^9, 
   3.7992877118921337`*^9}},ExpressionUUID->"0592e49d-07ed-4848-abc3-\
8a7ac5b54c3d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.799287584410118*^9, 
  3.799287599066393*^9}},ExpressionUUID->"cdbc32d7-568a-4a75-975b-\
615fea6bac33"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]x", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"newpauli", "[", 
      SubscriptBox["\[Sigma]", "x"], "]"}], " ", "//", "ComplexExpand"}], " ",
     "//", "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Sigma]x", "]"}]}], "Input",
 CellChangeTimes->{{3.799287718661845*^9, 3.7992877905361967`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"aa54c464-2ddf-4387-8d8e-39ad448fd08e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Nu]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Nu]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.79928775354509*^9, 3.799287791262484*^9, 
  3.799288842487243*^9, 3.799616713673793*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"eedcab88-7175-4507-b426-\
cb6362439445"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"newpauli", "[", 
      SubscriptBox["\[Sigma]", "y"], "]"}], " ", "//", "ComplexExpand"}], " ",
     "//", "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Sigma]y", "]"}]}], "Input",
 CellChangeTimes->{{3.7992878123765497`*^9, 3.7992878190954323`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5623a550-2b0c-45c9-8d73-a03b6e487588"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Sin", "[", "\[Nu]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Nu]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Nu]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Nu]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799287821358984*^9, 3.7992888468351097`*^9, 
  3.7996167174687357`*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"f00a8a91-2e00-4fdd-bea0-\
86cccb86d300"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]z", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"newpauli", "[", 
      SubscriptBox["\[Sigma]", "z"], "]"}], " ", "//", "ComplexExpand"}], " ",
     "//", "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Sigma]z", "]"}]}], "Input",
 CellChangeTimes->{{3.7992878306072454`*^9, 3.7992878358674965`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7c64fcfe-6b29-4688-8166-791b2eea4917"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Nu]", "]"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}]}], 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Nu]", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7992878443846397`*^9, 3.799288849044749*^9, 
  3.7996167209884315`*^9},
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"2078b9b6-8ecf-418a-91c7-\
85d7200a8a04"]
}, Open  ]],

Cell[TextData[{
 "\nLet us see if they are the same using A=  ",
 Cell[BoxData[
  RowBox[{
   UnderscriptBox["\[Sum]", "ij"], 
   SubscriptBox["A", "ij"]}]],ExpressionUUID->
  "4185002a-2827-4a30-b4d9-ded61665be89"],
 " ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"i"},
    "Ket"], 
   TemplateBox[{"j"},
    "Bra"]}]],ExpressionUUID->"35926ddf-3317-4c78-ac5c-d41b3db44523"]
}], "Text",
 CellChangeTimes->{{3.7992873621657095`*^9, 3.799287520678377*^9}, 
   3.7992875781715307`*^9, {3.7992878880354953`*^9, 3.799287916112671*^9}, {
   3.79928885268466*^9, 
   3.7992888540648503`*^9}},ExpressionUUID->"db982c85-5ed4-47d3-b83f-\
000e248d3755"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Compare", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"up", ",", 
       RowBox[{"Conjugate", "[", "up", "]"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"up", ",", 
       RowBox[{"Conjugate", "[", "down", "]"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"down", ",", 
       RowBox[{"Conjugate", "[", "up", "]"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"down", ",", 
       RowBox[{"Conjugate", "[", "down", "]"}]}], "]"}]}]}]}], " ", 
  ";"}]], "Input",
 CellChangeTimes->{{3.799287918515892*^9, 3.799288036012484*^9}, {
   3.7992880703091917`*^9, 3.7992881395542107`*^9}, 3.799288199813712*^9, {
   3.7992887249779825`*^9, 3.7992887706010942`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a5c07429-19a5-4985-97be-1ab414d71029"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], "==", 
    RowBox[{"Compare", "[", "\[Sigma]x", "]"}]}], " ", "//", 
   "ComplexExpand"}], " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7992881713794727`*^9, 3.7992882264606314`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"844d0d78-44e1-4548-8189-2a6c2dae5590"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7992881851887836`*^9, 3.79928822702594*^9}, {
   3.7992887292819977`*^9, 3.799288755087417*^9}, 3.7992888604309025`*^9, 
   3.7996167290103827`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"61ffa861-1fe1-46d0-998a-0ab7e7f8ebb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "y"], "==", 
    RowBox[{"Compare", "[", "\[Sigma]y", "]"}]}], " ", "//", 
   "ComplexExpand"}], " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7992882491496077`*^9, 3.799288252783992*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"a967865e-81c4-4aab-84af-f792ca36c796"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.799288260984446*^9, 3.799288862774595*^9, 
  3.7996167311358423`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"b001a16c-27b8-418d-a315-605b0cf8d841"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "z"], "==", 
    RowBox[{"Compare", "[", "\[Sigma]z", "]"}]}], " ", "//", 
   "ComplexExpand"}], " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7992882666694517`*^9, 3.7992882710625052`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"55d03eb0-362e-4823-9934-e13716674319"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.799288271548627*^9, 3.799288865266201*^9, 
  3.799616732968072*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"1003c3fa-31c7-4db1-97f0-15efc19489e9"]
}, Open  ]],

Cell["\<\

For the Last part we simply write this new operator\
\>", "Text",
 CellChangeTimes->{{3.7992883677875414`*^9, 
  3.799288387337085*^9}},ExpressionUUID->"d6e08ea4-b446-43a8-abb0-\
e3747d8707d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "x"], 
     RowBox[{"Sin", "[", "\[Nu]", "]"}], 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{
     SubscriptBox["\[Sigma]", "y"], 
     RowBox[{"Sin", "[", "\[Nu]", "]"}], 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{
     SubscriptBox["\[Sigma]", "z"], 
     RowBox[{"Cos", "[", "\[Nu]", "]"}]}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.799288414718149*^9, 3.799288521957978*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"09359143-746c-4b7a-b719-988989c4369d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Nu]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "\[Nu]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Nu]", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7992885231134887`*^9, 3.7992888689451847`*^9, 
  3.7996167368777094`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"37a490f6-eb7c-46c8-b740-0dda9ccd9908"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", " ", "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.7996167426599607`*^9, 3.7996167539478903`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"55efed47-9270-459b-8e56-b0725a1d9055"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7996167545908318`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"ce3f483b-8aa6-48bd-9275-deaf21c200f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", ".", "up"}], " ", "//", "ComplexExpand"}], " ", "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.799288531783224*^9, 3.799288581342228*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a4e9e043-08e1-4ed7-b4d8-541a7f5793dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    FractionBox["\[Nu]", "2"], "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7992885607386866`*^9, 3.7992885818447075`*^9}, 
   3.799288871839917*^9, 3.7996168153076515`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"b335de3c-4326-4019-8966-f955e6d12f9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"up", "==", 
    RowBox[{"\[Sigma]", ".", "up"}]}], " ", "//", "ComplexExpand"}], " ", "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7996167694429197`*^9, 3.7996168125175605`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"a0a07c29-185b-4fa1-9569-93d3ab8963d9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.799616782988591*^9, 3.799616818833452*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"575fe6c1-102b-4938-8a53-66be0844ff8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", ".", "down"}], " ", "//", "ComplexExpand"}], " ", "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7992885892650857`*^9, 3.7992886132119565`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"13b68e2f-1f68-4fc2-8c56-39555292d1bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7992885908357697`*^9, 3.7992886155524883`*^9}, 
   3.7992888743534484`*^9, 3.7996168221600485`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"f2a6090b-6b78-4298-9bce-49e9f639952f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"down", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]", ".", "down"}], " ", "//", "ComplexExpand"}], " ", "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7992886198882904`*^9, 3.799288629921547*^9}, {
  3.799616825224468*^9, 3.7996168435535374`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"09d05740-ad73-47ce-bcee-d615aaa452c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Nu]", "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7992886304823217`*^9, 3.7992888765684414`*^9, 
  3.7996168445107203`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"be375644-c558-423f-b0f6-bd4db3d32d8c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7992887602675533`*^9, 
  3.7992887650550346`*^9}},ExpressionUUID->"735dc49e-406c-406e-9bc2-\
174021acf603"]
},
WindowSize->{1141.2, 580.1999999999999},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"636604a7-2add-4b92-b11f-c034508043dd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 628, 14, 35, "Text",ExpressionUUID->"f4983b08-6475-4f92-8753-868de4450b04"],
Cell[1189, 36, 94015, 1545, 419, "Input",ExpressionUUID->"3de3d2cc-ca8c-4af7-bd44-5db1d3d54087"],
Cell[95207, 1583, 264, 7, 81, "Text",ExpressionUUID->"d0ea0013-371e-4f9b-a55c-1bd08cb35e8c"],
Cell[CellGroupData[{
Cell[95496, 1594, 636, 15, 28, "Input",ExpressionUUID->"ece06511-2ee0-4a07-bc50-8d3f46cc4d72"],
Cell[96135, 1611, 581, 13, 46, "Output",ExpressionUUID->"799552a7-3e6e-4314-9026-f22c8b26fec4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96753, 1629, 211, 3, 28, "Input",ExpressionUUID->"27c7a82c-931b-4da0-a7e4-852a06e62868"],
Cell[96967, 1634, 1036, 30, 76, "Output",ExpressionUUID->"96119033-8508-4efa-a8cb-fd4e7c6a8559"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98040, 1669, 788, 19, 49, "Input",ExpressionUUID->"f78a07c0-fe0f-409f-a87e-68a82e63744e"],
Cell[98831, 1690, 668, 16, 46, "Output",ExpressionUUID->"9d1e4d9a-a64f-446a-aa2b-18d4b77483bb"],
Cell[99502, 1708, 830, 23, 58, "Output",ExpressionUUID->"ea3c4e67-e373-4168-b2e7-1fa78ee88ec9"]
}, Open  ]],
Cell[100347, 1734, 867, 20, 60, "Text",ExpressionUUID->"a23cb79a-3af3-48b0-89ee-6126c9f2b67c"],
Cell[CellGroupData[{
Cell[101239, 1758, 656, 11, 49, "Input",ExpressionUUID->"86b83555-63e7-4cbf-aaf5-8448f5255c68"],
Cell[101898, 1771, 327, 5, 32, "Output",ExpressionUUID->"2511ef9c-4cd5-45a7-af8d-0d56886b44b0"]
}, Open  ]],
Cell[102240, 1779, 234, 4, 35, "Text",ExpressionUUID->"ca24d7fb-f527-4c47-8ef6-2a89cb4e521d"],
Cell[CellGroupData[{
Cell[102499, 1787, 339, 7, 28, "Input",ExpressionUUID->"44dd5788-374c-46c6-b53d-6b2518e4689e"],
Cell[102841, 1796, 225, 3, 32, "Output",ExpressionUUID->"20025681-e626-4c85-adcb-842008a73f5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103103, 1804, 334, 7, 28, "Input",ExpressionUUID->"f74f5f11-2be0-4da7-ac07-f898205975e4"],
Cell[103440, 1813, 433, 10, 46, "Output",ExpressionUUID->"51e1eb7e-b0db-468e-bd1b-329b80775871"]
}, Open  ]],
Cell[103888, 1826, 233, 6, 35, "Text",ExpressionUUID->"15650405-3322-4d38-96d9-6c2d2a247759"],
Cell[CellGroupData[{
Cell[104146, 1836, 378, 8, 28, "Input",ExpressionUUID->"fdb2a1ef-294c-46e5-8516-47f68b7c02f2"],
Cell[104527, 1846, 221, 3, 32, "Output",ExpressionUUID->"cbcb548a-be46-49bd-b2ab-a7d16fc90298"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104785, 1854, 324, 7, 28, "Input",ExpressionUUID->"75e5e189-d6a4-4845-a41e-b6b6de26080d"],
Cell[105112, 1863, 150, 2, 32, "Output",ExpressionUUID->"c0e2be22-3345-4d9f-b1cc-cefbc32a6c55"]
}, Open  ]],
Cell[105277, 1868, 364, 7, 35, "Text",ExpressionUUID->"931d8688-9266-4217-ae8b-34f262e19add"],
Cell[CellGroupData[{
Cell[105666, 1879, 453, 10, 28, "Input",ExpressionUUID->"3539fe5c-165f-4685-bdad-cc4c5649f464"],
Cell[106122, 1891, 1021, 27, 48, "Output",ExpressionUUID->"d5790925-a5f1-4693-8956-b3bb57e74812"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107180, 1923, 467, 10, 28, "Input",ExpressionUUID->"9e72918f-a0f1-4795-9e2a-b8214f6b896d"],
Cell[107650, 1935, 989, 28, 48, "Output",ExpressionUUID->"bcd04d7a-6fcb-4787-8bcb-166eec9b1850"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108676, 1968, 354, 6, 28, "Input",ExpressionUUID->"df62cba3-97e5-47f0-bbf8-0f182b2f33d4"],
Cell[109033, 1976, 392, 9, 32, "Output",ExpressionUUID->"42249cee-fb66-45b8-bf56-bb5b08f3758f"]
}, Open  ]],
Cell[109440, 1988, 1042, 31, 61, "Text",ExpressionUUID->"92a0e08a-b85f-4504-81fe-144b9351ce62"],
Cell[CellGroupData[{
Cell[110507, 2023, 932, 20, 28, "Input",ExpressionUUID->"99696f18-13e8-45ef-a760-4c3faac2a22b"],
Cell[111442, 2045, 572, 10, 32, "Output",ExpressionUUID->"3d9b0238-2afd-4b79-8ade-ca09f1332ee7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112051, 2060, 629, 16, 28, "Input",ExpressionUUID->"d4f9dc1f-9467-447f-9c2f-7aea19d5b9d7"],
Cell[112683, 2078, 243, 5, 32, "Output",ExpressionUUID->"be91871f-cb4a-4d6d-bdb1-086e25c4da70"]
}, Open  ]],
Cell[112941, 2086, 295, 7, 35, "Text",ExpressionUUID->"e7afad75-4426-4b71-94b8-6b0e539cc039"],
Cell[CellGroupData[{
Cell[113261, 2097, 501, 11, 69, "Input",ExpressionUUID->"8eaaea5a-9112-4112-aeba-827f4d9579b9"],
Cell[113765, 2110, 336, 9, 32, "Output",ExpressionUUID->"fe0fc348-2390-4ace-bd98-869bb2fc6132"],
Cell[114104, 2121, 381, 10, 32, "Output",ExpressionUUID->"18b74401-d147-454e-81a3-e09320ad6a69"],
Cell[114488, 2133, 357, 10, 32, "Output",ExpressionUUID->"be895eb9-e540-4934-b60d-460c91f85f24"]
}, Open  ]],
Cell[114860, 2146, 531, 16, 61, "Text",ExpressionUUID->"7b3ecec4-7738-4322-8113-d854c89f66b5"],
Cell[115394, 2164, 1942, 62, 107, "Input",ExpressionUUID->"3cb954a5-a3b4-4256-8522-d5f3e24c9611"],
Cell[117339, 2228, 678, 20, 38, "Text",ExpressionUUID->"0592e49d-07ed-4848-abc3-8a7ac5b54c3d"],
Cell[118020, 2250, 152, 3, 28, "Input",ExpressionUUID->"cdbc32d7-568a-4a75-975b-615fea6bac33"],
Cell[CellGroupData[{
Cell[118197, 2257, 456, 10, 49, "Input",ExpressionUUID->"aa54c464-2ddf-4387-8d8e-39ad448fd08e"],
Cell[118656, 2269, 1695, 48, 68, "Output",ExpressionUUID->"eedcab88-7175-4507-b426-cb6362439445"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120388, 2322, 458, 10, 49, "Input",ExpressionUUID->"5623a550-2b0c-45c9-8d73-a03b6e487588"],
Cell[120849, 2334, 1704, 49, 68, "Output",ExpressionUUID->"f00a8a91-2e00-4fdd-bea0-86cccb86d300"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122590, 2388, 458, 10, 49, "Input",ExpressionUUID->"7c64fcfe-6b29-4688-8166-791b2eea4917"],
Cell[123051, 2400, 1156, 34, 68, "Output",ExpressionUUID->"2078b9b6-8ecf-418a-91c7-85d7200a8a04"]
}, Open  ]],
Cell[124222, 2437, 643, 19, 61, "Text",ExpressionUUID->"db982c85-5ed4-47d3-b83f-000e248d3755"],
Cell[124868, 2458, 1347, 37, 49, "Input",ExpressionUUID->"a5c07429-19a5-4985-97be-1ab414d71029"],
Cell[CellGroupData[{
Cell[126240, 2499, 360, 8, 28, "Input",ExpressionUUID->"844d0d78-44e1-4548-8189-2a6c2dae5590"],
Cell[126603, 2509, 281, 4, 32, "Output",ExpressionUUID->"61ffa861-1fe1-46d0-998a-0ab7e7f8ebb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126921, 2518, 358, 8, 30, "Input",ExpressionUUID->"a967865e-81c4-4aab-84af-f792ca36c796"],
Cell[127282, 2528, 201, 3, 32, "Output",ExpressionUUID->"b001a16c-27b8-418d-a315-605b0cf8d841"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127520, 2536, 360, 8, 28, "Input",ExpressionUUID->"55d03eb0-362e-4823-9934-e13716674319"],
Cell[127883, 2546, 199, 3, 32, "Output",ExpressionUUID->"1003c3fa-31c7-4db1-97f0-15efc19489e9"]
}, Open  ]],
Cell[128097, 2552, 204, 6, 58, "Text",ExpressionUUID->"d6e08ea4-b446-43a8-abb0-e3747d8707d2"],
Cell[CellGroupData[{
Cell[128326, 2562, 627, 17, 49, "Input",ExpressionUUID->"09359143-746c-4b7a-b719-988989c4369d"],
Cell[128956, 2581, 961, 26, 32, "Output",ExpressionUUID->"37a490f6-eb7c-46c8-b740-0dda9ccd9908"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129954, 2612, 221, 3, 28, "Input",ExpressionUUID->"55efed47-9270-459b-8e56-b0725a1d9055"],
Cell[130178, 2617, 215, 5, 32, "Output",ExpressionUUID->"ce3f483b-8aa6-48bd-9275-deaf21c200f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130430, 2627, 287, 6, 28, "Input",ExpressionUUID->"a4e9e043-08e1-4ed7-b4d8-541a7f5793dd"],
Cell[130720, 2635, 497, 12, 46, "Output",ExpressionUUID->"b335de3c-4326-4019-8966-f955e6d12f9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131254, 2652, 318, 7, 28, "Input",ExpressionUUID->"a0a07c29-185b-4fa1-9569-93d3ab8963d9"],
Cell[131575, 2661, 174, 2, 32, "Output",ExpressionUUID->"575fe6c1-102b-4938-8a53-66be0844ff8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131786, 2668, 293, 6, 28, "Input",ExpressionUUID->"13b68e2f-1f68-4fc2-8c56-39555292d1bc"],
Cell[132082, 2676, 542, 14, 46, "Output",ExpressionUUID->"f2a6090b-6b78-4298-9bce-49e9f639952f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132661, 2695, 371, 8, 28, "Input",ExpressionUUID->"09d05740-ad73-47ce-bcee-d615aaa452c0"],
Cell[133035, 2705, 515, 14, 69, "Output",ExpressionUUID->"be375644-c558-423f-b0f6-bd4db3d32d8c"]
}, Open  ]],
Cell[133565, 2722, 156, 3, 28, "Input",ExpressionUUID->"735dc49e-406c-406e-9bc2-174021acf603"]
}
]
*)

